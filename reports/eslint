[{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\App.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'BrowserRouter' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'Route' is defined but never used.","line":3,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":30},{"ruleId":"no-unused-vars","severity":1,"message":"'Switch' is defined but never used.","line":3,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":38}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport ActivitiesForm from \"./Components/Activities/ActivitiesForm\";\r\nimport CategoriesForm from \"./Components/Categories/CategoriesForm\";\r\nimport NewsForm from \"./Components/News/NewsForm\";\r\nimport SlidesForm from \"./Components/Slides/SlidesForm\";\r\nimport TestimonialForm from \"./Components/Testimonials/TestimonialsForm\";\r\nimport UserForm from \"./Components/Users/UsersForm\";\r\nimport SchoolCampaign from \"./Campaigns/School/SchoolCampaign\";\r\nimport ToysCampaign from \"./Campaigns/Toys/ToysCampaign\";\r\nimport MembersForm from \"./Components/Members/MembersForm\";\r\nimport ProjectsForm from \"./Components/Projects/ProjectsForm\";\r\nimport Detail from \"./Components/Activities/Detail/Detail\";\r\nimport OrganizationEditionForm from './Components/Organization/OrganizationEditionForm';\r\nimport NewsDetailLayout from './Components/News/Detail/NewsDetailLayout';\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {/* <Route path=\"/\" exact component={} />           Esta ruta debe ser para el Home */}\r\n          <Route path=\"/create-activity\" component={ActivitiesForm} />\r\n          <Route path=\"/create-category\" component={CategoriesForm} />\r\n          <Route path=\"/create-news\" component={NewsForm} />\r\n          <Route path=\"/backoffice/organization/edit\" component={OrganizationEditionForm} />\r\n          <Route path=\"/backoffice/create-slide\" component={SlidesForm} />\r\n          <Route path=\"/create-testimonials\" component={TestimonialForm} />\r\n          <Route path=\"/create-user\" component={UserForm} />\r\n          <Route path=\"/create-member\" component={MembersForm} />\r\n          <Route path=\"/create-project\" component={ProjectsForm} />\r\n          <Route path=\"/school-campaign\" component={SchoolCampaign} />\r\n          <Route path=\"/toys-campaign\" component={ToysCampaign} />\r\n          <Route path=\"/edit-activity/:activityId\" component={ActivitiesForm} />\r\n          <Route path=\"/edit-testimonial/:testimonialId\" component={TestimonialForm} />\r\n          <Route path=\"/edit-project/:projectId\" component={ProjectsForm} />\r\n          <Route path=\"/novedades/:id\" component={NewsDetailLayout} />\r\n          <Route path=\"/activity-detail/:id\" component={Detail} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\App.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":11}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store';\r\nimport App from './App';\r\n\r\ntest('renders learn react link', () => {\r\n  const { getByText } = render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n\r\n  expect(getByText(/learn/i)).toBeInTheDocument();\r\n});\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\School\\Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\School\\Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\School\\Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\School\\SchoolCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport Header from './Header';\r\nimport Slider from './Slider';\r\nimport Content from './Content';\r\nimport Footer from './Footer';\r\n\r\nconst SchoolCampaign = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Slider />\r\n      <Content />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SchoolCampaign;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\School\\Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Slider = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\Toys\\Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\Toys\\Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\Toys\\Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\Toys\\Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst Slider = () => {\r\n  return (\r\n    <div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Campaigns\\Toys\\ToysCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport Header from './Header';\r\nimport Slider from './Slider';\r\nimport Content from './Content';\r\nimport Footer from './Footer';\r\n\r\nconst ToysCampaign = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Slider />\r\n      <Content />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToysCampaign;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Activities\\ActivitiesContent.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nconst ActivitiesContent = ({description}) => {\r\n    return (\r\n        <div>\r\n           {ReactHtmlParser({description})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivitiesContent\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Activities\\ActivitiesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Formik' is defined but never used.","line":3,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Form' is defined but never used.","line":3,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'Field' is defined but never used.","line":3,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":28},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'setActivity' is assigned a value but never used.","line":13,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":31}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState} from 'react';\r\nimport {useParams} from 'react-router'\r\nimport {Formik, Form, Field} from 'formik';\r\nimport { setUrlImage } from '../common/File';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { CustomErrorMessage } from '../common/CustomErrorMessage';\r\nimport {setCKEditorText} from '../common/ckEditor/setCKEditorText';\r\nimport { validateForm} from '../common/validations/validateForm';\r\nimport {createOrUpdateActivity} from '../../Services/activityService';\r\nconst ActivitiesForm = () => {\r\n  const {activityId} = useParams();\r\n  const [activity, setActivity] = useState({\r\n    name:'',\r\n    description:'',\r\n    image: ''\r\n  });\r\n\r\n  const handleChangeDescription = (description, setFieldValue) => {\r\n    setFieldValue(\"description\", description.getData())\r\n  };\r\n\r\n  const handleChangeImage = (e, setImage) =>{\r\n    setUrlImage(e.target.files[0],setImage)\r\n  };\r\n\r\n  const handleSubmit = (values,resetForm) => {\r\n    let updatedValues =setCKEditorText(values,'description')\r\n    createOrUpdateActivity(activityId,updatedValues)\r\n    resetForm();\r\n  }\r\n\r\n  const placeholder = \"Write some activity description\";\r\n  return (\r\n    <div className='form-container'>\r\n      <Formik\r\n        initialValues={{\r\n          ...activity\r\n        }}\r\n        validate={(values)=>validateForm(values)}\r\n        onSubmit={(values,{resetForm})=>handleSubmit(values,resetForm)}\r\n      >\r\n        {({errors, setFieldValue,values})=>(\r\n          <Form className='form' >\r\n            <div>\r\n              <p>Activity Name</p>\r\n              <Field\r\n                label=\"Activity Name\"\r\n                className=\"input-field\"\r\n                type=\"text\"\r\n                id='name'\r\n                name=\"name\"\r\n                placeholder=\"Activity Name\"\r\n              />\r\n              {errors.name && CustomErrorMessage ('title',errors.name)}\r\n            </div>\r\n            <div>\r\n              <p>Description</p>\r\n              <CKEditor\r\n                  editor={ ClassicEditor }\r\n                  data=''\r\n                  config={ {\r\n                     placeholder\r\n                  } }\r\n                  onChange={(event, description)=>handleChangeDescription (description,setFieldValue)}\r\n              />\r\n              {errors.description && CustomErrorMessage ('description',errors.description)}\r\n            </div>\r\n            <div >\r\n              <p >Image</p>\r\n              <div>\r\n                {values.image && <img src={values.image} alt='imagen vista previa' width='180' height='180' />}\r\n              </div>\r\n              <div>\r\n                <Field\r\n                    className='input-image'\r\n                    type='file'\r\n                    accept=\"image/png, image/jpg\"\r\n                    id='image'\r\n                    name='image'\r\n                    value=''\r\n                    onChange={(e)=>handleChangeImage(e,setFieldValue)}\r\n                />\r\n              </div>\r\n              {errors.image && CustomErrorMessage ('image',errors.image)}\r\n            </div>\r\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivitiesForm;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Activities\\ActivitiesList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport '../CardListStyles.css';\r\n\r\nconst ActivitiesList = () => {\r\n    const activitiesMock = [\r\n        {id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\r\n        {id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\r\n        {id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba'}\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1>Listado Actividades</h1>\r\n            <ul className=\"list-container\">\r\n                {activitiesMock.length > 0 ?\r\n                    activitiesMock.map((activity) => {\r\n                        return(\r\n                            <li className=\"card-info\" key={activity.id}>\r\n                                <h3>{activity.name}</h3>\r\n                                <p>{activity.description}</p>\r\n                            </li>\r\n                        )\r\n                    })\r\n                :\r\n                    <p>No hay actividades</p>\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActivitiesList;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Activities\\Detail\\Detail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'axios' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":12},{"ruleId":"no-unused-vars","severity":1,"message":"'CardContent' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'CardMedia' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'Typography' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'CardActionArea' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":24},{"ruleId":"no-unused-vars","severity":1,"message":"'Title' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":30,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":30,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { CardActionArea } from \"@material-ui/core\";\r\nimport Title from \"../../Title/Title\";\r\nimport getActivity from '../../../Services/activityService'\r\nimport \"../../../Styles/CardStyle.css\";\r\n\r\nconst Detail = () => {\r\n  const { id } = useParams();\r\n  const [activity, setActivity] = useState(\"\");\r\n  const [activityDescription, setActivityDescription] = useState(\"\");\r\n\r\n  const stripedHtml = useCallback(() => {\r\n    activity.description &&\r\n      setActivityDescription(activity.description.replace(/<[^>]+>/g, \"\"));\r\n  }, [activity.description]);\r\n\r\n  useEffect(() => {\r\n    getActivity(id)\r\n      .then((response) => {\r\n          setActivity(response.data.data);\r\n          stripedHtml();\r\n        })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [stripedHtml]);\r\n\r\n  return (\r\n    <Card className=\"cardStyle\">\r\n      <CardActionArea>\r\n        <CardMedia>\r\n          <Title\r\n            title={activity.name}\r\n            image={activity.image}\r\n            key={activity.id}\r\n          />\r\n        </CardMedia>\r\n        <CardContent>\r\n          <Typography>{activityDescription}</Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Auth\\CustomRegisterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport '../FormStyles.css';\r\nimport { useFormik } from 'formik';\r\n\r\nconst CustomRegisterForm = () => {\r\n    const [initialValues, setInitialValues] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const validate = values => {\r\n        const errors = {};\r\n\r\n        const includesLetter = string => {\r\n            const letters = /[A-Za-z]/;\r\n            return !!letters.test(string)\r\n        }\r\n\r\n        const includesSymbols = string => {\r\n            const symbols= /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\r\n            return !!symbols.test(string);\r\n        }\r\n\r\n        const includesNumbers= string => {\r\n            const numbers = /[0-9]/;\r\n            return !!numbers.test(string);\r\n        }\r\n        const errorRequired = (key) => {\r\n            if(!values[key]){\r\n                errors[key] = 'Dato Obligatorio'\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        const isEmailValid = email => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\r\n\r\n        const isPaswordValid = password => {\r\n            password.length >= 6 && includesLetter(password) && includesSymbols(password) && includesNumbers(password)\r\n        }\r\n\r\n        if (!errorRequired('email') && isEmailValid(values.email) ) {\r\n            errors.email = 'Email inválido';\r\n        }\r\n        if (!errorRequired('password') && !isPaswordValid(values.password)) {\r\n           errors.password = 'La contraseña debe ser de al menos 6 caracteres, tambien debe incluir al menos una letra y un símbolo(@#$%)';\r\n        }\r\n\r\n        if (!errorRequired('repeatedPassword') && values.repeatedPassword !== values.password) {\r\n            errors.repeatedPassword = `Las contraseñas no coinciden`;\r\n        }\r\n        return errors;\r\n    };\r\n\r\n\r\n    const {touched,errors,values,handleChange,handleSubmit,handleBlur} = useFormik({\r\n\r\n        initialValues: {\r\n          email: '',\r\n          password: '',\r\n          repeatedPassword: '',\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            setInitialValues({...initialValues,email:values.email,password:values.password})\r\n            localStorage.setItem('token','tokenValueExample')\r\n        }\r\n    });\r\n    return (\r\n        <form\r\n            className=\"form-container\"\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input\r\n                className=\"input-field\"\r\n                type=\"text\"\r\n                id=\"email\"\r\n                placeholder=\"Ingrese email\"\r\n                value={values.email}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            {touched.email && errors.email }\r\n            <input\r\n                className=\"input-field\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Contraseña\"\r\n            />\r\n            {touched.password  && errors.password }\r\n            <input\r\n                className=\"input-field\"\r\n                type=\"password\"\r\n                id=\"repeatedPassword\"\r\n                value={values.repeatedPassword}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Confirmar contraseña\"\r\n            />\r\n            {touched.repeatedPassword && errors.repeatedPassword}\r\n            <button id=\"registerButton\" className=\"submit-btn\" type=\"submit\">Registrarse</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CustomRegisterForm;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Auth\\LoginForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'useFormik' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'hasRequiredError' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":26},{"ruleId":"no-unused-vars","severity":1,"message":"'regExp' is defined but never used.","line":2,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":34},{"ruleId":"no-unused-vars","severity":1,"message":"'validValue' is defined but never used.","line":2,"column":36,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":46},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useFormik } from 'formik';\r\nimport { hasRequiredError, regExp, validValue } from '../../Utils/validation';\r\nimport '../FormStyles.css';\r\nconst LoginForm = () => {\r\n    const [initialValues, setInitialValues] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'email'){\r\n            setInitialValues({...initialValues, email: e.target.value})\r\n        } if(e.target.name === 'password'){\r\n            setInitialValues({...initialValues, password: e.target.value})\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(initialValues);\r\n        localStorage.setItem('token', 'tokenValueExample')\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n            <input className=\"input-field\" type=\"text\" name=\"email\" value={initialValues.name} onChange={handleChange} placeholder=\"Enter email\"></input>\r\n            <input className=\"input-field\" type=\"text\" name=\"password\" value={initialValues.password} onChange={handleChange} placeholder=\"Enter password\"></input>\r\n            <button className=\"submit-btn\" type=\"submit\">Log In</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Auth\\RegisterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport '../FormStyles.css';\r\n\r\nconst RegisterForm = () => {\r\n    const [initialValues, setInitialValues] = useState({\r\n        name: '',\r\n        lastName: ''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'name'){\r\n            setInitialValues({...initialValues, name: e.target.value})\r\n        } if(e.target.name === 'lastName'){\r\n            setInitialValues({...initialValues, lastName: e.target.value})\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(initialValues);\r\n        localStorage.setItem('token', 'tokenValueExample')\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Enter name\"></input>\r\n            <input className=\"input-field\" type=\"text\" name=\"lastName\" value={initialValues.lastName} onChange={handleChange} placeholder=\"Enter last name\"></input>\r\n            <button className=\"submit-btn\" type=\"submit\">Register</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default RegisterForm;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Backoffice\\Home\\Edit.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'EditItem' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":16},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":15,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":15,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport EditItem from \"./EditItem\";\r\nimport getSlides from \"../../../Services/slidesService\";\r\n\r\nconst EditHomeForm = ({ homeEditWelcomeTitle }) => {\r\n  const [slides, setSlides] = useState([]);\r\n  const [slidesIds, setSlidesIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getSlides()\r\n      .then((response) => setSlides(response.data.data))\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const showSlidesEditionForm = () =>\r\n    slides.map((slide) => (\r\n      <EditItem\r\n        item={slide}\r\n        slidesIds={slidesIds}\r\n        setSlidesIds={setSlidesIds}\r\n      />\r\n    ));\r\n\r\n  const formik = useFormik({\r\n    initialValues: { homeEditWelcomeTitle },\r\n\r\n    validate: (values) => {\r\n      let errors = {};\r\n      if (!values.homeEditWelcomeTitle) {\r\n        errors.homeEditWelcomeTitle = \"Required\";\r\n      }\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: (values, { resetForm }) => {\r\n      resetForm({ values: \"\" });\r\n      let greetingsText = JSON.stringify(values, null, 4);\r\n      alert(greetingsText + \" Image Ids Selected: \" + slidesIds);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1 id=\"homeEditTitle\" name=\"homeEditTitle\">\r\n        Página de Edición de Home\r\n      </h1>\r\n      <form\r\n        id=\"homeEditForm\"\r\n        name=\"homeEditForm\"\r\n        onSubmit={formik.handleSubmit}\r\n        className=\"Form\"\r\n      >\r\n        <Button\r\n          id=\"homeEditSubmitButton\"\r\n          name=\"homeEditSubmitButton\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n        >\r\n          Aplicar Cambios\r\n        </Button>\r\n        <br />\r\n        <label\r\n          id=\"homeEditWelcomeLabel\"\r\n          name=\"homeEditWelcomeLabel\"\r\n          htmlFor=\"homeEditWelcomeTitle\"\r\n        >\r\n          Título de bienvenida:{\" \"}\r\n        </label>\r\n        <input\r\n          id=\"homeEditWelcomeTitle\"\r\n          name=\"homeEditWelcomeTitle\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.homeEditWelcomeTitle}\r\n          className=\"form-control\"\r\n          maxLength={20}\r\n        ></input>\r\n            {formik.errors.homeEditWelcomeTitle}\r\n        <h2 id=\"homeEditSubTitle\" name=\"homeEditSubTitle\">\r\n          Choose 3 images:{\" \"}\r\n        </h2>\r\n        {showSlidesEditionForm()}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditHomeForm;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Backoffice\\Home\\EditItem.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\n\r\nconst EditItem = ({ item, slidesIds, setSlidesIds }) => {\r\n  const handleSelectImage = () => {\r\n    slidesIds.length < 3\r\n      ? setSlidesIds([...slidesIds, item.id])\r\n      : alert(\"You already chose 3 images\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h5 id=\"sliderImageName\" name=\"sliderImageName\" className=\"card-title\">\r\n        {item && item.name}\r\n      </h5>\r\n      <Button\r\n        id=\"addToSliderButton\"\r\n        name=\"addToSliderButton\"\r\n        variant=\"contained\"\r\n        type=\"button\"\r\n        className=\"btn btn-secondary\"\r\n        value=\"Add to the Slider\"\r\n        onClick={handleSelectImage}\r\n      >\r\n        Seleccionar Imagen\r\n      </Button>\r\n      <img\r\n        id=\"sliderImage\"\r\n        name=\"sliderImage\"\r\n        src={item && item.image}\r\n        alt={item && item.name}\r\n        key={item && item.id}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditItem;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Categories\\CategoriesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport '../FormStyles.css';\r\n\r\nconst CategoriesForm = () => {\r\n    const [initialValues, setInitialValues] = useState({\r\n        name: '',\r\n        description: ''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'name'){\r\n            setInitialValues({...initialValues, name: e.target.value})\r\n        } if(e.target.name === 'description'){\r\n            setInitialValues({...initialValues, description: e.target.value})\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(initialValues);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Title\"></input>\r\n            <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\r\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CategoriesForm;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Inputs\\FileInput.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'InputLabel' is defined but never used.","line":1,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"no-unused-vars","severity":1,"message":"'FormHelperText' is defined but never used.","line":1,"column":30,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":44}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Button, InputLabel, FormHelperText} from '@material-ui/core';\r\nimport { isFile } from '../../Utils/validation';\r\nimport '../../Styles/inputs.css';\r\n\r\nconst FileInput = ({btnText, name, value, color, accept, errorMessage, className, ...events}) => {\r\n    return (\r\n        <div className={`show-file-input ${className || ''}`}>\r\n            <input type=\"file\" name={name} id={name} {...events} accept={accept} className=\"hide\"/>\r\n            <label htmlFor={name}>\r\n                <Button variant=\"contained\" color={color} component=\"span\">\r\n                    {btnText}\r\n                </Button>\r\n            </label>\r\n            {isFile(value) && <InputLabel className='show-file-input__file-name'>Archivo subido: {value.name}</InputLabel>}\r\n            {errorMessage && <FormHelperText error>{errorMessage}</FormHelperText>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { FileInput };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Inputs\\InputEditor.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nconst InputEditor = ({ news, setNews }) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"content\">Content</label>\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        data={news.content || \"\"}\r\n        required={true}\r\n        onChange={(event, editor) => {\r\n          const data = editor.getData();\r\n          const newsData = data.replace(/<[^>]*>/g, \"\");\r\n          setNews({ ...news, content: newsData });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputEditor;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Inputs\\InputImg.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'useState' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":25},{"ruleId":"no-unused-vars","severity":1,"message":"'Dropzone' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":16},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":5,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":5,"endColumn":14},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":10,"column":30,"nodeType":"MemberExpression","messageId":"unexpected","endLine":10,"endColumn":41},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":30,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":41}],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nconst InputImg = ({ news, setNews }) => {\r\n  console.log(news);\r\n\r\n  const handleDrop = (acceptedFiles) =>\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader();\r\n      reader.onabort = () => console.log(\"file reading was aborted\");\r\n      reader.onerror = () => console.log(\"file reading has failed\");\r\n      reader.onload = () => {\r\n        const binaryStr = reader.result;\r\n        setNews({ ...news, image: binaryStr });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n\r\n  useEffect(() => {}, [news.image]);\r\n  return (\r\n    <div>\r\n      <Dropzone\r\n        onDrop={handleDrop}\r\n        accept=\"image/jpeg, image/png\"\r\n        multiple={false}\r\n        maxSize={1000000}\r\n        className=\"dropzone\"\r\n        activeClassName=\"active-dropzone\"\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps({ className: \"dropzone\" })}>\r\n            <input {...getInputProps()} />\r\n            <p style={{ cursor: \"pointer\" }}>\r\n              Drag'n'drop files, or click to select files\r\n            </p>\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      <div>\r\n        <strong>Files:</strong>\r\n        <ul style={{ listStyle: \"none\" }}>\r\n          {news.image && (\r\n            <li>\r\n              <img\r\n                style={{ width: \"250px\", height: \"200px\" }}\r\n                src={news.image}\r\n                alt=\"img\"\r\n              />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputImg;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Inputs\\TextEditor.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'FormControl' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'FormHelperText' is defined but never used.","line":3,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":37},{"ruleId":"no-unused-vars","severity":1,"message":"'FormLabel' is defined but never used.","line":3,"column":39,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":48},{"ruleId":"no-unused-vars","severity":1,"message":"'InputLabel' is defined but never used.","line":3,"column":50,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":60}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { FormControl, FormHelperText, FormLabel, InputLabel } from '@material-ui/core';\r\nimport '../../Styles/inputs.css';\r\n\r\nconst TextEditor = ({label, errorMessage, name, value, className, ...events}) => {\r\n    return (\r\n        <FormControl className={`show-ckeditor-input ${className || ''}`}>\r\n            <FormLabel htmlFor={name} className='show-ckeditor-input__label'>{label}</FormLabel>\r\n            <CKEditor\r\n                editor={ClassicEditor}\r\n                type=\"text\"\r\n                name={name}\r\n                value={value}\r\n                {...events}\r\n            />\r\n            {errorMessage && <FormHelperText error>{errorMessage}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport { TextEditor };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Inputs\\TextInput.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'FormControl' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'InputLabel' is defined but never used.","line":1,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":33},{"ruleId":"no-unused-vars","severity":1,"message":"'Input' is defined but never used.","line":1,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":40},{"ruleId":"no-unused-vars","severity":1,"message":"'FormHelperText' is defined but never used.","line":1,"column":42,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":56}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\r\nimport '../../Styles/inputs.css';\r\n\r\nconst TextInput = ({name, label, type, placeholder, value, errorMessage, className, ...inputEvents}) => {\r\n    return (\r\n        <FormControl className={className}>\r\n            <InputLabel htmlFor={name}>{label}</InputLabel>\r\n            <Input type={type} name={name} value={value} placeholder={placeholder} {...inputEvents}/>\r\n            {errorMessage && <FormHelperText error>{errorMessage}</FormHelperText>}\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport { TextInput };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Members\\MembersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport '../FormStyles.css';\r\n\r\nconst MembersForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: '',\r\n    description: ''\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.name === 'name'){\r\n      setInitialValues({...initialValues, name: e.target.value})\r\n    } if(e.target.name === 'description'){\r\n      setInitialValues({...initialValues, description: e.target.value})\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(initialValues);\r\n  }\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Name\"></input>\r\n      <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\r\n      <button className=\"submit-btn\" type=\"submit\">Send</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MembersForm;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\News\\Detail\\NewsDetailLayout.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'NewsTitle' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'Box' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect,useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport NewsTitle from './NewsTittle';\r\nimport { Box } from '@material-ui/core';\r\nimport { getNewById } from '../../../Services/NewServices/getNewById';\r\n\r\nconst NewsDetailLayout = ({prop}) => {\r\n\r\n    const [newData,setNewData] = useState({})\r\n\r\n    const {id} = useParams()\r\n\r\n    const loadNewData = async () => {\r\n        const {data} = await getNewById()\r\n        setNewData(data)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadNewData()\r\n    },[id])\r\n\r\n    return (\r\n        <div>\r\n            <NewsTitle\r\n                title={prop.title}\r\n            />\r\n            <img alt=\"newImg\" src={newData.img}></img>\r\n            <Box>\r\n                {newData.body}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewsDetailLayout;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\News\\Detail\\NewsTittle.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\n\r\nconst NewsTitle = ({title}) => {\r\n    return (\r\n        <h3>{title}</h3>\r\n    );\r\n}\r\nexport default NewsTitle;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\News\\NewsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'InputImg' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'InputEditor' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":19}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Components/FormStyles.css\";\r\nimport { createOrUpdateNews } from \"../../Services/newsServices\";\r\nimport { getCategory } from \"../../Services/categoriesServices\";\r\nimport InputImg from \"../Inputs/InputImg\";\r\nimport InputEditor from \"../Inputs/InputEditor\";\r\n\r\nconst NewsForm = () => {\r\n  const [news, setNews] = useState({\r\n    name: \"\",\r\n    content: \"\",\r\n    category: [],\r\n    categoryId: \"\",\r\n    image: \"\",\r\n  });\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setNews({ ...news, name: e.target.value });\r\n        break;\r\n      case \"content\":\r\n        setNews({ ...news, content: e.target.value });\r\n        break;\r\n      case \"category\":\r\n        const newCategorySelected = categories?.find(\r\n          (category) => category.name === e.target.value\r\n        );\r\n        setNews({\r\n          ...news,\r\n          category: e.target.value,\r\n          categoryId: newCategorySelected?.id,\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    sendNews();\r\n  };\r\n\r\n  const sendNews = async () => {\r\n    createOrUpdateNews(news);\r\n    setNews({\r\n      name: \"\",\r\n      content: \"\",\r\n      category: [],\r\n      categoryId: \"\",\r\n      image: \"\",\r\n    });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const data = await getCategory();\r\n    setCategories(data);\r\n  }, []);\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Title</label>\r\n      <input\r\n        className=\"input-field\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={news.name || \"\"}\r\n        onChange={handleChange}\r\n        minLength=\"5\"\r\n        required\r\n      ></input>\r\n      <InputEditor news={news} setNews={setNews} />\r\n      <label htmlFor=\"category\">Category</label>\r\n      <select\r\n        className=\"select-field\"\r\n        name=\"category\"\r\n        value={news.category || \"\"}\r\n        onChange={handleChange}\r\n        required\r\n      >\r\n        <option value=\"\" disabled>\r\n          Select Category\r\n        </option>\r\n        {categories?.map((category) => {\r\n          return (\r\n            <option key={category.id} value={category.name}>\r\n              {category.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <InputImg news={news} setNews={setNews} />\r\n      <button className=\"submit-btn\" type=\"submit\">\r\n        Send\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewsForm;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\News\\NewsList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport '../CardListStyles.css';\r\n\r\nconst NewsList = () => {\r\n    const newsMock = [\r\n        {id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\r\n        {id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\r\n        {id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba'}\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1>Listado de Novedades</h1>\r\n            <ul className=\"list-container\">\r\n                {newsMock.length > 0 ?\r\n                    newsMock.map((element) => {\r\n                        return(\r\n                            <li className=\"card-info\" key={element.id}>\r\n                                <h3>{element.name}</h3>\r\n                                <p>{element.description}</p>\r\n                            </li>\r\n                        )\r\n                    })\r\n                :\r\n                    <p>No hay novedades</p>\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewsList;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Newsletter\\NewsletterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport '../../Styles/NewsletterForm.css'\r\n\r\nconst SetTokenNewsLetter = () =>{\r\n    localStorage.setItem(\"tokenNL\",\"settokenNL\")\r\n}\r\n    function NewsletterForm() {\r\n    return (\r\n            <form  onSubmit={SetTokenNewsLetter} className=\"GreyRoundedContainerForm\">\r\n                <h4>Subscribite a nuestras actualizaciones!</h4>\r\n                <input\r\n                type=\"email\"\r\n                required\r\n                className=\"InputEmailNL\"\r\n                placeholder=\"Email\"\r\n                ></input>\r\n                <button className=\"StandardButton\">Enviar</button>\r\n                <p>No te preocupes, no te enviaremos spam</p>\r\n            </form>\r\n    )\r\n}\r\nexport default NewsletterForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\OrganizationData\\OrganizationDataLayout\\styled.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Organization\\OrganizationData.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Box' is defined but never used.","line":3,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":25},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":3,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":33}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {useEffect, useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport  { Box, Container, Button} from '@material-ui/core';\r\nimport { getOrganizationInformation } from '../../Services/OrganizationInformation';\r\n\r\nconst OrganizationData = () => {\r\n\r\n    const { push } = useHistory()\r\n    const [orgData,setOrgData]= useState({})\r\n\r\n    const loadData = async () => {\r\n        const {data} = await getOrganizationInformation()\r\n        setOrgData(data)\r\n    }\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[])\r\n\r\n    const redirectToEditionForm = () => push(\"/backoffice/organization/edit\")\r\n\r\n    return (\r\n        <Container >\r\n            <img alt=\"organizationPhoto\" src={orgData.logo} />\r\n            <h3>{orgData.name}</h3>\r\n            <Box sx={{display: 'flex'}}>\r\n                {orgData.short_description}\r\n            </Box>\r\n            <Button variant=\"contained\" onClick={redirectToEditionForm}>Editar</Button>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default OrganizationData;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Organization\\OrganizationEditionForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'TextInput' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'FileInput' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'TextEditor' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'values' is defined but never used.","line":38,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":38,"endColumn":25}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { TextInput } from '../Inputs/TextInput';\r\nimport { FileInput } from '../Inputs/FileInput';\r\nimport { TextEditor } from '../Inputs/TextEditor';\r\nimport { validateRequiredValues, regExp, validValue, isValidFile} from '../../Utils/validation';\r\nimport { showError, handleCKEditorChange, changeTouchedState, handleFileChange } from '../../Utils/handlers';\r\nimport { useFormik } from 'formik';\r\nimport '../FormStyles.css';\r\n\r\nconst validateOrganizationForm = values => {\r\n    const errors = {};\r\n    const {facebook, instagram, ...requiredValues} = values;\r\n    const acceptTypes = ['image/png', 'image/jpg'];\r\n    const notValidUrlFacebook = facebook.length > 0 && !validValue(regExp.url, facebook);\r\n    const notValidUrlInstagram = instagram.length > 0 && !validValue(regExp.url, instagram);\r\n    const notValidImage = !isValidFile(acceptTypes, values.logo);\r\n\r\n    validateRequiredValues(values, errors, requiredValues);\r\n    if(notValidImage) errors.logo = 'Solo se aceptan formatos .png y .jpg'\r\n    if(notValidUrlFacebook) errors.facebook = 'Debe ser una url válida';\r\n    if(notValidUrlInstagram) errors.instagram = 'Debe ser una url válida';\r\n\r\n    return errors;\r\n}\r\n\r\nconst OrganizationEditionForm = () => {\r\n    const organization = {\r\n        organizationName: '',\r\n        shortDescription: '',\r\n        logo: '',\r\n        longDescription: '',\r\n        facebook: '',\r\n        instagram: ''\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: organization,\r\n        validate: validateOrganizationForm,\r\n        onSubmit: values => {}\r\n    });\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={formik.handleSubmit}>\r\n            <TextInput name=\"organizationName\" label=\"Nombre\" type=\"text\" placeholder=\"Ingrese el nombre de la organización\"\r\n                value={formik.values.organizationName}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                errorMessage={showError(formik, 'organizationName')}/>\r\n            <TextEditor\r\n                name=\"shortDescription\" label=\"Descripción corta\"\r\n                value={formik.values.shortDescription}\r\n                onChange={(e, editor) => handleCKEditorChange(formik, editor, 'shortDescription')}\r\n                onBlur={() => changeTouchedState(formik, 'shortDescription')}\r\n                errorMessage={showError(formik, 'shortDescription')}/>\r\n            <FileInput btnText=\"Subir logo\" name=\"logo\" color=\"primary\" accept=\"image/png, image/jpg\"\r\n                value={formik.values.logo}\r\n                onChange={(e) => handleFileChange(formik, e.target.files, 'logo')}\r\n                errorMessage={showError(formik, 'logo')}/>\r\n            <TextInput name=\"longDescription\" label=\"Descripcion larga\" type=\"text\"\r\n                value={formik.values.longDescription}\r\n                onChange={formik.handleChange} placeholder=\"Escriba la descripción larga\"\r\n                onBlur={formik.handleBlur}\r\n                errorMessage={showError(formik, 'longDescription')}/>\r\n            <TextInput name=\"facebook\" label=\"Facebook\" type=\"text\"\r\n                value={formik.values.facebook}\r\n                onChange={formik.handleChange} placeholder=\"Ingrese la url\"\r\n                onBlur={formik.handleBlur}\r\n                errorMessage={showError(formik, 'facebook')}/>\r\n            <TextInput name=\"instagram\" label=\"Instagram\" type=\"text\"\r\n                value={formik.values.instagram}\r\n                onChange={formik.handleChange} placeholder=\"Ingrese la url\"\r\n                onBlur={formik.handleBlur}\r\n                errorMessage={showError(formik, 'instagram')}/>\r\n            <button className=\"submit-btn\" type=\"submit\">Guardar cambios</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default OrganizationEditionForm;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Projects\\ProjectsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Formik' is defined but never used.","line":4,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Form' is defined but never used.","line":4,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'Field' is defined but never used.","line":4,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":28},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\r\nimport { useParams } from 'react-router';\r\nimport {useEffect, useState} from 'react';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport { setUrlImage } from '../common/File';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { CustomErrorMessage } from '../common/CustomErrorMessage';\r\nimport {setCKEditorText} from '../common/ckEditor/setCKEditorText';\r\nimport {getProject, createOrUpdateProject} from '../../Services/projectService';\r\nimport { validateProjectsForm} from '../common/validations/validateProjectsForm';\r\nconst ProjectsForm = () => {\r\n  const {projectId} = useParams()\r\n  var minDateForm = new Date().toISOString().split('T')[0];\r\n\r\n  const [project, setProject] = useState({\r\n    title:'',\r\n    description:'',\r\n    image:'',\r\n    due_date:''\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(projectId) {\r\n      setProject(getProject(projectId))\r\n    };\r\n  }, [projectId]);\r\n\r\n  const handleChangeDescription = (description, setFieldValue) => {\r\n    setFieldValue(\"description\", description.getData())\r\n  };\r\n\r\n  const handleChangeImage = (e, setImage) =>{\r\n    setUrlImage(e.target.files[0],setImage)\r\n  };\r\n\r\n  const handleSubmit = (values,resetForm) => {\r\n    let updatedValues =setCKEditorText(values,'description')\r\n    createOrUpdateProject(projectId,updatedValues)\r\n    resetForm();\r\n  }\r\n\r\n  const placeholder=\"Write some activity description\";\r\n\r\n    return (\r\n      <div className='form-container'>\r\n        <Formik\r\n          initialValues={{\r\n              ...project\r\n          }}\r\n          validate={(values)=>validateProjectsForm(values)}\r\n          onSubmit={(values, {resetForm})=>handleSubmit(values,resetForm)}\r\n        >\r\n          {({errors, setFieldValue, values})=>(\r\n            <Form className='form' >\r\n              <div >\r\n                <p>Project Title</p>\r\n                <Field\r\n                  className=\"input-field\"\r\n                  type=\"text\"\r\n                  id='title'\r\n                  name=\"title\"\r\n                  placeholder=\"Activity Title\"\r\n                />\r\n                {errors.title && CustomErrorMessage ('title',errors.title)}\r\n              </div>\r\n                <div>\r\n                  <p>Date</p>\r\n                  <Field\r\n                    className='input-field'\r\n                    type='date'\r\n                    min={minDateForm}\r\n                    name='due_date'\r\n                    id='due_date'\r\n                  />\r\n                </div>\r\n                <div >\r\n                  <p >Description</p>\r\n                  <CKEditor\r\n                    className='input-field'\r\n                    editor={ ClassicEditor }\r\n                    data=''\r\n                    config={ {\r\n                       placeholder\r\n                    } }\r\n                    onChange={(event, description)=>handleChangeDescription(description,setFieldValue)}\r\n                  />\r\n                  {errors.description && CustomErrorMessage ('description',errors.description)}\r\n                </div>\r\n                <div>\r\n                    <p>Image</p>\r\n                    <div>\r\n                        {values.image && <img src={values.image} alt='imagen vista previa' width='180' height='180' />}\r\n                      </div>\r\n                    <div>\r\n                      <Field\r\n                          type='file'\r\n                          accept=\"image/png, image/jpg\"\r\n                          id='image'\r\n                          name='image'\r\n                          value=''\r\n                          onChange={(e)=>handleChangeImage(e, setFieldValue)}\r\n                      />\r\n                    </div>\r\n                    {errors.image && CustomErrorMessage ('image',errors.image)}\r\n                </div>\r\n                <button className=\"submit-btn\" type=\"submit\">Send</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n\r\n};\r\n\r\nexport default ProjectsForm;\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Slides\\SlidesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'axios' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'ShowSucessAlert' is assigned a value but never used.","line":20,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":20,"endColumn":24}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport \"../FormStyles.css\";\r\nimport Swal from 'sweetalert2'\r\nimport {CreateSlide, EditSlide} from '../../Services/CreateOrEditSlideService'\r\n\r\nconst SlidesForm = ({slide}) => {\r\n  const [initialSlides, setInitialSlides] = useState({\r\n    name: slide?.name ?? '',\r\n    description:slide?.description ?? '',\r\n    image:slide?.image ?? '',\r\n    order:slide?.order ?? '',\r\n  });\r\n  const hasSlide = !!slide\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const ShowSucessAlert = () => {\r\n    Swal.fire(\r\n      'Slide Creado!'\r\n    )\r\n  }\r\n  const ShowLenghtError = () => {\r\n    Swal.fire({\r\n      title: 'Error!',\r\n      text: 'No se puede tener menos de 4 caracteristicas',\r\n      icon: 'error',\r\n      confirmButtonText: 'Ok, voy a editarlo!'\r\n    })\r\n  }\r\n  const CreateOrEditSlide = () =>{\r\n    if(!hasSlide)\r\n    (initialSlides.name.length>4)?\r\n      CreateSlide(initialSlides)\r\n    : ShowLenghtError()\r\n    else {\r\n      EditSlide(initialSlides)\r\n    }\r\n  }\r\n  const SetImageShorterUrl = (e) => {\r\n          const imageFile = e.target.files[0]\r\n          const imageUrl = new FileReader()\r\n          imageUrl.readAsDataURL(imageFile)\r\n          imageUrl.onload = (e) => {\r\n            setInitialSlides({...initialSlides, image:e.target.result})\r\n          }\r\n}\r\n\r\n  return (\r\n    <form className=\"form-container\" onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='name'\r\n        required\r\n        value={initialSlides.name}\r\n        onChange={(e) => {\r\n          setInitialSlides({\r\n            ...initialSlides,\r\n            name: e.target.value,\r\n          })\r\n        }}\r\n        placeholder='Title (min 4 caracters)'\r\n      ></input>\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        className='input-field'\r\n        type='text'\r\n        name='description'\r\n        value={initialSlides.description}\r\n        placeholder='Write some description'\r\n        required\r\n        onChange={(e, editor) => {\r\n          const data = editor.getData()\r\n          setInitialSlides({ ...initialSlides, description: data})\r\n        }}\r\n      />\r\n      <input\r\n        className='input-image'\r\n        type='file'\r\n        accept='image/png, image/jpg'\r\n        id='image'\r\n        name='image'\r\n        required\r\n        onChange={SetImageShorterUrl}\r\n      />\r\n      <button onClick={CreateOrEditSlide} className=\"submit-btn\" type=\"submit\">\r\n        {hasSlide ? \"Editar\" : \"Enviar\"}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default SlidesForm;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Testimonials\\TestimonialsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Formik' is defined but never used.","line":3,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Form' is defined but never used.","line":3,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'Field' is defined but never used.","line":3,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":28},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'setTestimonial' is assigned a value but never used.","line":14,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":14,"endColumn":37}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport { setUrlImage } from '../common/File';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { CustomErrorMessage } from '../common/CustomErrorMessage';\r\nimport {setCKEditorText} from '../common/ckEditor/setCKEditorText';\r\nimport {createOrUpdateTestimonial} from '../../Services/testimonialService';\r\nimport { validateForm} from '../common/validations/validateForm';\r\nconst TestimonialForm = () => {\r\n\r\n  const {testimonialId} = useParams()\r\n  const [testimonial, setTestimonial] = useState({\r\n    name:'',\r\n    description:'',\r\n    image: ''\r\n  });\r\n\r\n  const handleChangeDescription = (description, setFieldValue) => {\r\n    setFieldValue(\"description\", description.getData())\r\n  };\r\n\r\n  const handleChangeImage = (e, setImage) =>{\r\n    setUrlImage(e.target.files[0],setImage)\r\n  };\r\n\r\n  const handleSubmit = (values,resetForm) => {\r\n    let updatedValues =setCKEditorText(values,'description')\r\n    createOrUpdateTestimonial(testimonialId,updatedValues)\r\n    resetForm();\r\n  }\r\n\r\n  const placeholder = \"Write some testimonial description\";\r\n  return (\r\n    <div className='form-container'>\r\n      <Formik\r\n        initialValues={{\r\n          ...testimonial\r\n        }}\r\n        validate={(values)=>validateForm(values)}\r\n        onSubmit={(values,{resetForm})=>handleSubmit(values,resetForm)}\r\n      >\r\n        {({errors, setFieldValue,values})=>(\r\n          <Form className='form' >\r\n            <div>\r\n              <p>Testimonial Name</p>\r\n              <Field\r\n                label=\"Testimonial Name\"\r\n                className=\"input-field\"\r\n                type=\"text\"\r\n                id='name'\r\n                name=\"name\"\r\n                placeholder=\"Testimonial Name\"\r\n              />\r\n              {errors.name && CustomErrorMessage ('title',errors.name)}\r\n            </div>\r\n            <div>\r\n              <p>Description</p>\r\n              <CKEditor\r\n                  editor={ ClassicEditor }\r\n                  data=''\r\n                  config={ {\r\n                     placeholder\r\n                  } }\r\n                  onChange={(event, description)=>handleChangeDescription (description,setFieldValue)}\r\n              />\r\n              {errors.description && CustomErrorMessage ('description',errors.description)}\r\n            </div>\r\n            <div >\r\n              <p >Image</p>\r\n              <div>\r\n                {values.image && <img src={values.image} alt='imagen vista previa' width='180' height='180' />}\r\n              </div>\r\n              <div>\r\n                <Field\r\n                    className='input-image'\r\n                    type='file'\r\n                    accept=\"image/png, image/jpg\"\r\n                    id='image'\r\n                    name='image'\r\n                    value=''\r\n                    onChange={(e)=>handleChangeImage(e,setFieldValue)}\r\n                />\r\n              </div>\r\n              {errors.image && CustomErrorMessage ('image',errors.image)}\r\n            </div>\r\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default TestimonialForm;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Title\\Title.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Box' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport DefaultImage from \"../../Assets/Title/default.jpg\";\r\n\r\nimport \"../../Styles/BoxStyle.css\";\r\n\r\nconst Title = (props) => {\r\n  const { title, image, id } = props;\r\n\r\n  const [titleImage, setTitleImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const finalImage = image ? image : DefaultImage;\r\n    setTitleImage(finalImage);\r\n  }, [image]);\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        className=\"boxStyle\"\r\n        key={id}\r\n        sx={{\r\n          backgroundImage: `url(${titleImage})`,\r\n        }}\r\n      >\r\n        {title}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Users\\UserModifierForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":14,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":14,"endColumn":40},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":17,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":17,"endColumn":40}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport '../FormStyles.css';\r\nimport { useFormik } from 'formik';\r\nimport { createUser, updateUser } from '../../Services/userServices';\r\nimport { rolesList } from '../utilsData/roleList';\r\n\r\nconst UserModifierForm = ({user}) => {\r\n\r\n    const hasUser = () => user ? true : false;\r\n\r\n    const handleOnSubmit =  async (values) => {\r\n        if(hasUser){\r\n            updateUser(user.id,values).then(result => result)\r\n            .catch(error => console.log(error))\r\n        }else {\r\n            createUser(values).then(response => response)\r\n            .catch(error => console.log(error))\r\n        }\r\n    };\r\n\r\n    const validate = (values) => {\r\n        const errors = {};\r\n\r\n        const dataRequired = 'Dato obligatorio';\r\n\r\n        const isNotValidField = (key) => {\r\n            if(values[key]) return false;\r\n            errors[key] = dataRequired;\r\n            return true;\r\n        };\r\n        const isJPEG = (imageType) => imageType === \"image/jpeg\";\r\n        const isPNG = (imageType) => imageType === \"image/png\";\r\n\r\n        const isValidImageType= key => {\r\n            const profilePhoto = values.profilePhoto[key];\r\n            if (values.profilePhoto[key] === null) return dataRequired;\r\n            return isJPEG(profilePhoto) || isPNG(profilePhoto);\r\n        }\r\n        const isEmailValid = email => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\r\n\r\n        if (!isNotValidField('name') && values.name.length < 4) {\r\n          errors.name = 'Debe tener 4 caracteres o mas';\r\n        };\r\n\r\n        if (!isNotValidField('email') && !isEmailValid(values.email)) {\r\n          errors.email = 'Dirección de email inválida';\r\n        };\r\n\r\n        if(!values.roleId){\r\n            errors.roleId = 'Elija un Rol'\r\n        };\r\n\r\n        if(!isNotValidField('password') && values.password.length < 8){\r\n            errors.password= 'La contraseña debe tener al menos 8 caracteres';\r\n        };\r\n        if(!isNotValidField('profilePhoto') && !isValidImageType('type') ){\r\n            errors.profilePhoto = 'Tipo de archivo no soportado, extensiones permitidas: jpg o png'\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    const {values,touched,errors,handleSubmit,handleChange,handleBlur,setFieldValue} = useFormik({\r\n        initialValues: {\r\n            name: user?.name ?? '',\r\n            password: user?.password ?? '',\r\n            email: user?.email ?? '',\r\n            roleId:user?.roleId ?? '',\r\n            profilePhoto:user?.profilePhoto ?? {}\r\n        },\r\n        validate,\r\n        enableReinitialize:true,\r\n        onSubmit: values => handleOnSubmit(values)\r\n    });\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n            {!hasUser ?<div><img alt=\"profilePhoto\" src={values.profilePhoto}></img></div>\r\n                :<div>\r\n                    <label htmlFor=\"img\">Seleccionar imagen: </label>\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"profilePhoto\"\r\n                        accept=\"image/jpeg\"\r\n                        onChange={e=>setFieldValue('profilePhoto',e?.target?.files ? e.target.files[0] : null)}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    {touched.profilePhoto && errors.profilePhoto}\r\n                </div>\r\n            }\r\n            <input\r\n                className=\"input-field\"\r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Nombre\"\r\n            />\r\n            {touched.name && errors.name}\r\n            <input\r\n                className=\"input-field\"\r\n                type=\"text\"\r\n                id=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Email\"\r\n            />\r\n            {touched.email && errors.email}\r\n            <input\r\n                className=\"input-field\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                placeholder=\"Contraseña\"\r\n            />\r\n            {touched.password && errors.password}\r\n            <select\r\n                className=\"input-field\"\r\n                value={values.roleId}\r\n                id=\"roleId\"\r\n                onChange={handleChange}\r\n            >\r\n                <option value=\"\" disabled >Seleccione el rol</option>\r\n                {\r\n                    rolesList.map(role =>\r\n                        <option key={role.roleId} value={role.roleId}>{role.roleId}</option>\r\n                    )\r\n                }\r\n            </select>\r\n            <button className=\"submit-btn\" type=\"submit\">{!hasUser ? 'Modificar' : 'Crear'}</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UserModifierForm;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\Users\\UsersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport '../FormStyles.css';\r\n\r\nconst UserForm = () => {\r\n    const [initialValues, setInitialValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        roleId: ''\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'name'){\r\n            setInitialValues({...initialValues, name: e.target.value})\r\n        } if(e.target.name === 'email'){\r\n            setInitialValues({...initialValues, email: e.target.value})\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(initialValues);\r\n    }\r\n\r\n    return (\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name || ''} onChange={handleChange} placeholder=\"Name\"></input>\r\n            <input className=\"input-field\" type=\"text\" name=\"email\" value={initialValues.description || ''} onChange={handleChange} placeholder=\"Email\"></input>\r\n            <select className=\"input-field\" value={initialValues.roleId || ''} onChange={e => setInitialValues({...initialValues, roleId: e.target.value})}>\r\n                <option value=\"\" disabled >Select the role</option>\r\n                <option value=\"1\">Admin</option>\r\n                <option value=\"2\">User</option>\r\n            </select>\r\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UserForm;\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\common\\CustomErrorMessage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorMessage' is defined but never used.","line":1,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":21}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {ErrorMessage} from 'formik';\r\n\r\nexport const CustomErrorMessage = (name,errors) =>{\r\n  return (\r\n    <ErrorMessage\r\n      name={name}\r\n      component={()=><p>{errors}</p>}\r\n    />\r\n  )\r\n};\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\common\\File.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\common\\ckEditor\\setCKEditorText.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\common\\validations\\validateForm.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\common\\validations\\validateProjectsForm.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Components\\utilsData\\roleList.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\CreateOrEditSlideService.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'res' is defined but never used.","line":13,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":15}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nconst CreateSlide = (initialSlides) => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"http://ongapi.alkemy.org/api/slides\",\r\n      data: {\r\n        name: initialSlides.name,\r\n        description: initialSlides.description,\r\n        image: initialSlides.image,\r\n      },\r\n    })\r\n    .then((res) => {\r\n          Swal.fire(\r\n            'Slide Creado!'\r\n          )\r\n      })\r\n      .catch((err) => (err));\r\n   }\r\n   const EditSlide = () => {\r\n       axios({\r\n        method: \"PUT\",\r\n        url: `http://ongapi.alkemy.org/api/slides/${slides.id}`,\r\n        data: {\r\n          name: initialSlides.name,\r\n          description: initialSlides.description,\r\n          image: initialSlides.image,\r\n        },\r\n       })\r\n   }\r\nexport {CreateSlide, EditSlide}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\NewServices\\getNewById.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\OrganizationInformation.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\activityService.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\categoriesServices.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":10,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":10,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\r\n\r\nconst getCategory = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"http://ongapi.alkemy.org/public/api/categories\"\r\n    );\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport { getCategory };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\newsServices.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":22,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":22,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\r\n\r\nconst getNews = async () => {\r\n  const response = await axios.get(\"http://ongapi.alkemy.org/public/api/news\");\r\n  const data = response.data.data;\r\n  return data;\r\n};\r\n\r\nconst createOrUpdateNews = async (news) => {\r\n  const data = await getNews();\r\n  const sameData = data.find((news) => news.id === news.categoryId);\r\n  try {\r\n    if (sameData) {\r\n      await axios.patch(\r\n        `http://ongapi.alkemy.org/public/api/news/${news.categoryId}`,\r\n        news\r\n      );\r\n    } else {\r\n      axios.post(\"http://ongapi.alkemy.org/public/api/news\", news);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport { createOrUpdateNews };\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\privateApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":18,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":29},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":19,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":30}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n        Group: 91                //Aqui va el ID del equipo!!\r\n    }\r\n}\r\n\r\nconst Get = () => {\r\n    axios.get('https://jsonplaceholder.typicode.com/users', config)\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport default Get;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\projectService.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\publicApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":18,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":29},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":19,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":30}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\r\n\r\nconst config = {\r\n    headers: {\r\n        Group: 91                //Aqui va el ID del equipo!!\r\n    }\r\n}\r\n\r\nconst Get = () => {\r\n    axios.get('https://jsonplaceholder.typicode.com/users', config)\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport default Get;\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\slidesService.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\testimonialService.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Services\\userServices.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Utils\\handlers.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\Utils\\validation.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\app\\store.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":11},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\serviceWorker.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":22},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":72,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":72,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":85,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":85,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":97,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":97,"endColumn":20},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":125,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":125,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Julian\\Desktop\\ot91server\\src\\setupTests.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]