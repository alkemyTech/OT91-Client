[{"filePath":"/home/mar/alkemy/OT91-server/src/App.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Counter' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'BrowserRouter' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'Route' is defined but never used.","line":5,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":30},{"ruleId":"no-unused-vars","severity":1,"message":"'Switch' is defined but never used.","line":5,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":38}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { Counter } from \"./features/counter/Counter\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport ActivitiesForm from \"./Components/Activities/ActivitiesForm\";\nimport CategoriesForm from \"./Components/Categories/CategoriesForm\";\nimport NewsForm from \"./Components/News/NewsForm\";\nimport SlidesForm from \"./Components/Slides/SlidesForm\";\nimport TestimonialForm from \"./Components/Testimonials/TestimonialsForm\";\nimport UserForm from \"./Components/Users/UsersForm\";\nimport SchoolCampaign from \"./Campaigns/School/SchoolCampaign\";\nimport ToysCampaign from \"./Campaigns/Toys/ToysCampaign\";\nimport MembersForm from \"./Components/Members/MembersForm\";\nimport ProjectsForm from \"./Components/Projects/ProjectsForm\";\nimport Detail from \"./Components/Activities/Detail/Detail\";\nimport OrganizationEditionForm from \"./Components/Organization/OrganizationEditionForm\";\nimport EditOrCreateMember from \"./Components/Members/EditOrCreateMember\";\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          {/* <Route path=\"/\" exact component={} />           Esta ruta debe ser para el Home */}\n          <Route path=\"/create-activity\" component={ActivitiesForm} />\n          <Route path=\"/create-category\" component={CategoriesForm} />\n          <Route path=\"/backoffice/members/edit\" component={EditOrCreateMember} />\n          <Route path=\"/create-news\" component={NewsForm} />\n          <Route\n            path=\"/backoffice/organization/edit\"\n            component={OrganizationEditionForm}\n          />\n          <Route path=\"/backoffice/create-slide\" component={SlidesForm} />\n          <Route path=\"/create-testimonials\" component={TestimonialForm} />\n          <Route path=\"/create-user\" component={UserForm} />\n          <Route path=\"/create-member\" component={MembersForm} />\n          <Route path=\"/create-project\" component={ProjectsForm} />\n          <Route path=\"/school-campaign\" component={SchoolCampaign} />\n          <Route path=\"/toys-campaign\" component={ToysCampaign} />\n          <Route path=\"/activity-detail/:id\" component={Detail} />\n        </Switch>\n      </BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Counter />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <span>\n            <span>Learn </span>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              React\n            </a>\n            <span>, </span>\n            <a\n              className=\"App-link\"\n              href=\"https://redux.js.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Redux\n            </a>\n            <span>, </span>\n            <a\n              className=\"App-link\"\n              href=\"https://redux-toolkit.js.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Redux Toolkit\n            </a>\n            ,<span> and </span>\n            <a\n              className=\"App-link\"\n              href=\"https://react-redux.js.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              React Redux\n            </a>\n          </span>\n        </header>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/App.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":11}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  const { getByText } = render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\n  expect(getByText(/learn/i)).toBeInTheDocument();\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Content = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Content;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Footer;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Header = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Header;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/SchoolCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport Header from './Header';\nimport Slider from './Slider';\nimport Content from './Content';\nimport Footer from './Footer';\n\nconst SchoolCampaign = () => {\n  return (\n    <>\n      <Header />\n      <Slider />\n      <Content />\n      <Footer />\n    </>\n  );\n}\n\nexport default SchoolCampaign;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/School/Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Slider = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Slider;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Content = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Content;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Footer;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Header = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Header;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\n\nconst Slider = () => {\n  return (\n    <div>\n\n    </div>\n  );\n}\n\nexport default Slider;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Campaigns/Toys/ToysCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport Header from './Header';\nimport Slider from './Slider';\nimport Content from './Content';\nimport Footer from './Footer';\n\nconst ToysCampaign = () => {\n  return (\n    <>\n      <Header />\n      <Slider />\n      <Content />\n      <Footer />\n    </>\n  );\n}\n\nexport default ToysCampaign;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Activities/ActivitiesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport \"../FormStyles.css\";\n\nconst ActivitiesForm = () => {\n  const [initialValues, setInitialValues] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  const handleChange = (e) => {\n    if (e.target.name === \"name\") {\n      setInitialValues({ ...initialValues, name: e.target.value });\n    }\n    if (e.target.name === \"description\") {\n      setInitialValues({ ...initialValues, description: e.target.value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(initialValues);\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"name\"\n        value={initialValues.name}\n        onChange={handleChange}\n        placeholder=\"Activity Title\"\n      ></input>\n\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"description\"\n        value={initialValues.description}\n        onChange={handleChange}\n        placeholder=\"Write some activity description\"\n      ></input>\n      <button className=\"submit-btn\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nexport default ActivitiesForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Activities/ActivitiesList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport '../CardListStyles.css';\n\nconst ActivitiesList = () => {\n    const activitiesMock = [\n        {id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba'}\n    ];\n\n    return (\n        <div>\n            <h1>Listado Actividades</h1>\n            <ul className=\"list-container\">\n                {activitiesMock.length > 0 ?\n                    activitiesMock.map((activity) => {\n                        return(\n                            <li className=\"card-info\" key={activity.id}>\n                                <h3>{activity.name}</h3>\n                                <p>{activity.description}</p>\n                            </li>\n                        )\n                    })\n                :\n                    <p>No hay actividades</p>\n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default ActivitiesList;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Activities/Detail/Detail.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'axios' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Card' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":12},{"ruleId":"no-unused-vars","severity":1,"message":"'CardContent' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'CardMedia' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'Typography' is defined but never used.","line":7,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'CardActionArea' is defined but never used.","line":8,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":8,"endColumn":24},{"ruleId":"no-unused-vars","severity":1,"message":"'Title' is defined but never used.","line":9,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":9,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":30,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":30,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardActionArea } from \"@material-ui/core\";\nimport Title from \"../../Title/Title\";\nimport getActivity from '../../../Services/activityService'\nimport \"../../../Styles/CardStyle.css\";\n\nconst Detail = () => {\n  const { id } = useParams();\n  const [activity, setActivity] = useState(\"\");\n  const [activityDescription, setActivityDescription] = useState(\"\");\n\n  const stripedHtml = useCallback(() => {\n    activity.description &&\n      setActivityDescription(activity.description.replace(/<[^>]+>/g, \"\"));\n  }, [activity.description]);\n\n  useEffect(() => {\n    getActivity(id)\n      .then((response) => {\n          setActivity(response.data.data);\n          stripedHtml();\n        })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [stripedHtml]);\n\n  return (\n    <Card className=\"cardStyle\">\n      <CardActionArea>\n        <CardMedia>\n          <Title\n            title={activity.name}\n            image={activity.image}\n            key={activity.id}\n          />\n        </CardMedia>\n        <CardContent>\n          <Typography>{activityDescription}</Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default Detail;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Auth/CustomRegisterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\nimport { useFormik } from 'formik';\n\nconst CustomRegisterForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        email: '',\n        password: ''\n    });\n\n    const validate = values => {\n        const errors = {};\n\n        const includesLetter = string => {\n            const letters = /[A-Za-z]/;\n            return !!letters.test(string)\n        }\n\n        const includesSymbols = string => {\n            const symbols= /[`!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?~]/;\n            return !!symbols.test(string);\n        }\n\n        const includesNumbers= string => {\n            const numbers = /[0-9]/;\n            return !!numbers.test(string);\n        }\n        const errorRequired = (key) => {\n            if(!values[key]){\n                errors[key] = 'Dato Obligatorio'\n                return true\n            }\n            return false\n        };\n        const isEmailValid = email => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\n\n        const isPaswordValid = password => {\n            password.length >= 6 && includesLetter(password) && includesSymbols(password) && includesNumbers(password)\n        }\n\n        if (!errorRequired('email') && isEmailValid(values.email) ) {\n            errors.email = 'Email inválido';\n        }\n        if (!errorRequired('password') && !isPaswordValid(values.password)) {\n           errors.password = 'La contraseña debe ser de al menos 6 caracteres, tambien debe incluir al menos una letra y un símbolo(@#$%)';\n        }\n\n        if (!errorRequired('repeatedPassword') && values.repeatedPassword !== values.password) {\n            errors.repeatedPassword = `Las contraseñas no coinciden`;\n        }\n        return errors;\n    };\n\n\n    const {touched,errors,values,handleChange,handleSubmit,handleBlur} = useFormik({\n\n        initialValues: {\n          email: '',\n          password: '',\n          repeatedPassword: '',\n        },\n        validate,\n        onSubmit: values => {\n            setInitialValues({...initialValues,email:values.email,password:values.password})\n            localStorage.setItem('token','tokenValueExample')\n        }\n    });\n    return (\n        <form\n            className=\"form-container\"\n            onSubmit={handleSubmit}\n        >\n            <input\n                className=\"input-field\"\n                type=\"text\"\n                id=\"email\"\n                placeholder=\"Ingrese email\"\n                value={values.email}\n                onBlur={handleBlur}\n                onChange={handleChange}\n            />\n            {touched.email && errors.email }\n            <input\n                className=\"input-field\"\n                type=\"password\"\n                id=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Contraseña\"\n            />\n            {touched.password  && errors.password }\n            <input\n                className=\"input-field\"\n                type=\"password\"\n                id=\"repeatedPassword\"\n                value={values.repeatedPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Confirmar contraseña\"\n            />\n            {touched.repeatedPassword && errors.repeatedPassword}\n            <button id=\"registerButton\" className=\"submit-btn\" type=\"submit\">Registrarse</button>\n        </form>\n    );\n}\n\nexport default CustomRegisterForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Auth/LoginForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'credentials' is defined but never used.","line":24,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":24,"endColumn":30}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useFormik } from 'formik';\nimport { hasRequiredError, regExp, validValue } from '../../Utils/validation';\nimport '../FormStyles.css';\n\nconst validateLogin = formData => {\n    const errors = {};\n    const notValidEmail = !hasRequiredError(formData, errors, 'email') && !validValue(regExp.email, formData.email);\n    const notValidPassword = !hasRequiredError(formData, errors, 'password') && !validValue(regExp.password, formData.password);\n\n    if(notValidEmail) errors.email = 'Email inválido';\n    if(notValidPassword) errors.password = 'La contraseña debe tener al menos 6 caracteres e incluir al menos una letra, un número y un símbolo';\n\n    return errors;\n}\n\n\nconst LoginForm = () => {\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validate: validateLogin,\n        onSubmit: credentials => { }\n    })\n\n\n    return (\n        <form className=\"form-container\" onSubmit={formik.handleSubmit}>\n            <input className=\"input-field\" type=\"email\" name=\"email\" value={formik.values.name} onChange={formik.handleChange} placeholder=\"Enter email\"></input>\n            <input className=\"input-field\" type=\"password\" name=\"password\" value={formik.values.password} onChange={formik.handleChange} placeholder=\"Enter password\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Ingresar</button>\n        </form>\n    );\n}\n\nexport default LoginForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Auth/RegisterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst RegisterForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        lastName: ''\n    })\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'lastName'){\n            setInitialValues({...initialValues, lastName: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n        localStorage.setItem('token', 'tokenValueExample')\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Enter name\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"lastName\" value={initialValues.lastName} onChange={handleChange} placeholder=\"Enter last name\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Register</button>\n        </form>\n    );\n}\n\nexport default RegisterForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Backoffice/Home/Edit.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'EditItem' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":16},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":15,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":15,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport EditItem from \"./EditItem\";\nimport getSlides from \"../../../Services/slidesService\";\n\nconst EditHomeForm = ({ homeEditWelcomeTitle }) => {\n  const [slides, setSlides] = useState([]);\n  const [slidesIds, setSlidesIds] = useState([]);\n\n  useEffect(() => {\n    getSlides()\n      .then((response) => setSlides(response.data.data))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const showSlidesEditionForm = () =>\n    slides.map((slide) => (\n      <EditItem\n        item={slide}\n        slidesIds={slidesIds}\n        setSlidesIds={setSlidesIds}\n      />\n    ));\n\n  const formik = useFormik({\n    initialValues: { homeEditWelcomeTitle },\n\n    validate: (values) => {\n      let errors = {};\n      if (!values.homeEditWelcomeTitle) {\n        errors.homeEditWelcomeTitle = \"Required\";\n      }\n      return errors;\n    },\n\n    onSubmit: (values, { resetForm }) => {\n      resetForm({ values: \"\" });\n      let greetingsText = JSON.stringify(values, null, 4);\n      alert(greetingsText + \" Image Ids Selected: \" + slidesIds);\n    },\n  });\n\n  return (\n    <>\n      <h1 id=\"homeEditTitle\" name=\"homeEditTitle\">\n        Página de Edición de Home\n      </h1>\n      <form\n        id=\"homeEditForm\"\n        name=\"homeEditForm\"\n        onSubmit={formik.handleSubmit}\n        className=\"Form\"\n      >\n        <Button\n          id=\"homeEditSubmitButton\"\n          name=\"homeEditSubmitButton\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Aplicar Cambios\n        </Button>\n        <br />\n        <label\n          id=\"homeEditWelcomeLabel\"\n          name=\"homeEditWelcomeLabel\"\n          htmlFor=\"homeEditWelcomeTitle\"\n        >\n          Título de bienvenida:{\" \"}\n        </label>\n        <input\n          id=\"homeEditWelcomeTitle\"\n          name=\"homeEditWelcomeTitle\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.homeEditWelcomeTitle}\n          className=\"form-control\"\n          maxLength={20}\n        ></input>\n            {formik.errors.homeEditWelcomeTitle}\n        <h2 id=\"homeEditSubTitle\" name=\"homeEditSubTitle\">\n          Choose 3 images:{\" \"}\n        </h2>\n        {showSlidesEditionForm()}\n      </form>\n    </>\n  );\n};\n\nexport default EditHomeForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Backoffice/Home/EditItem.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst EditItem = ({ item, slidesIds, setSlidesIds }) => {\n  const handleSelectImage = () => {\n    slidesIds.length < 3\n      ? setSlidesIds([...slidesIds, item.id])\n      : alert(\"You already chose 3 images\");\n  };\n\n  return (\n    <>\n      <h5 id=\"sliderImageName\" name=\"sliderImageName\" className=\"card-title\">\n        {item && item.name}\n      </h5>\n      <Button\n        id=\"addToSliderButton\"\n        name=\"addToSliderButton\"\n        variant=\"contained\"\n        type=\"button\"\n        className=\"btn btn-secondary\"\n        value=\"Add to the Slider\"\n        onClick={handleSelectImage}\n      >\n        Seleccionar Imagen\n      </Button>\n      <img\n        id=\"sliderImage\"\n        name=\"sliderImage\"\n        src={item && item.image}\n        alt={item && item.name}\n        key={item && item.id}\n      />\n    </>\n  );\n};\n\nexport default EditItem;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Categories/CategoriesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst CategoriesForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        description: ''\n    })\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'description'){\n            setInitialValues({...initialValues, description: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Title\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default CategoriesForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Inputs/FileInput.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'InputLabel' is defined but never used.","line":1,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":28},{"ruleId":"no-unused-vars","severity":1,"message":"'FormHelperText' is defined but never used.","line":1,"column":30,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":44}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Button, InputLabel, FormHelperText} from '@material-ui/core';\nimport { isFile } from '../../Utils/validation';\nimport '../../Styles/inputs.css';\n\nconst FileInput = ({btnText, name, value, color, accept, errorMessage, className, ...events}) => {\n    return (\n        <div className={`show-file-input ${className || ''}`}>\n            <input type=\"file\" name={name} id={name} {...events} accept={accept} className=\"hide\"/>\n            <label htmlFor={name}>\n                <Button variant=\"contained\" color={color} component=\"span\">\n                    {btnText}\n                </Button>\n            </label>\n            {isFile(value) && <InputLabel className='show-file-input__file-name'>Archivo subido: {value.name}</InputLabel>}\n            {errorMessage && <FormHelperText error>{errorMessage}</FormHelperText>}\n        </div>\n    )\n}\n\nexport { FileInput };\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Inputs/InputEditor.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nconst InputEditor = ({ news, setNews }) => {\n  return (\n    <div>\n      <label htmlFor=\"content\">Content</label>\n      <CKEditor\n        editor={ClassicEditor}\n        data={news.content || \"\"}\n        required={true}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          const newsData = data.replace(/<[^>]*>/g, \"\");\n          setNews({ ...news, content: newsData });\n        }}\n      />\n    </div>\n  );\n};\n\nexport default InputEditor;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Inputs/InputImg.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'useState' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":25},{"ruleId":"no-unused-vars","severity":1,"message":"'Dropzone' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":16},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":5,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":5,"endColumn":14},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":10,"column":30,"nodeType":"MemberExpression","messageId":"unexpected","endLine":10,"endColumn":41},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":30,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":41}],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nconst InputImg = ({ news, setNews }) => {\n  console.log(news);\n\n  const handleDrop = (acceptedFiles) =>\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        const binaryStr = reader.result;\n        setNews({ ...news, image: binaryStr });\n      };\n      reader.readAsDataURL(file);\n    });\n\n  useEffect(() => {}, [news.image]);\n  return (\n    <div>\n      <Dropzone\n        onDrop={handleDrop}\n        accept=\"image/jpeg, image/png\"\n        multiple={false}\n        maxSize={1000000}\n        className=\"dropzone\"\n        activeClassName=\"active-dropzone\"\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps({ className: \"dropzone\" })}>\n            <input {...getInputProps()} />\n            <p style={{ cursor: \"pointer\" }}>\n              Drag'n'drop files, or click to select files\n            </p>\n          </div>\n        )}\n      </Dropzone>\n      <div>\n        <strong>Files:</strong>\n        <ul style={{ listStyle: \"none\" }}>\n          {news.image && (\n            <li>\n              <img\n                style={{ width: \"250px\", height: \"200px\" }}\n                src={news.image}\n                alt=\"img\"\n              />\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default InputImg;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Inputs/TextEditor.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'FormControl' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'FormHelperText' is defined but never used.","line":3,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":37},{"ruleId":"no-unused-vars","severity":1,"message":"'FormLabel' is defined but never used.","line":3,"column":39,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":48},{"ruleId":"no-unused-vars","severity":1,"message":"'InputLabel' is defined but never used.","line":3,"column":50,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":60}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { FormControl, FormHelperText, FormLabel, InputLabel } from '@material-ui/core';\nimport '../../Styles/inputs.css';\n\nconst TextEditor = ({label, errorMessage, name, value, className, ...events}) => {\n    return (\n        <FormControl className={`show-ckeditor-input ${className || ''}`}>\n            <FormLabel htmlFor={name} className='show-ckeditor-input__label'>{label}</FormLabel>\n            <CKEditor\n                editor={ClassicEditor}\n                type=\"text\"\n                name={name}\n                value={value}\n                {...events}\n            />\n            {errorMessage && <FormHelperText error>{errorMessage}</FormHelperText>}\n        </FormControl>\n    )\n}\n\nexport { TextEditor };\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Inputs/TextInput.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'FormControl' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":21},{"ruleId":"no-unused-vars","severity":1,"message":"'InputLabel' is defined but never used.","line":1,"column":23,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":33},{"ruleId":"no-unused-vars","severity":1,"message":"'Input' is defined but never used.","line":1,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":40},{"ruleId":"no-unused-vars","severity":1,"message":"'FormHelperText' is defined but never used.","line":1,"column":42,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":56}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { FormControl, InputLabel, Input, FormHelperText } from '@material-ui/core';\nimport '../../Styles/inputs.css';\n\nconst TextInput = ({name, label, type, placeholder, value, errorMessage, className, ...inputEvents}) => {\n    return (\n        <FormControl className={className}>\n            <InputLabel htmlFor={name}>{label}</InputLabel>\n            <Input type={type} name={name} value={value} placeholder={placeholder} {...inputEvents}/>\n            {errorMessage && <FormHelperText error>{errorMessage}</FormHelperText>}\n        </FormControl>\n    )\n}\n\nexport { TextInput };\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Members/EditOrCreateMember.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":18},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":48,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":48,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport Swal from \"sweetalert2\";\nimport \"../FormStyles.css\";\n\nconst EditCreateMember = () => {\n  const [member, setMember] = useState({\n    name: \"\",\n    description: \"\",\n    imageMember: \"\",\n    social_media: \"\",\n  });\n\n  const handleChange = (e) => {\n    if (e.target.name === \"name\") {\n      setMember({ ...member, name: e.target.value });\n    }\n\n    if (e.target.name === \"image\") {\n      const fileValid =\n        e.target.files[0].type === \"image/jpeg\" ||\n        e.target.files[0].type === \"image/png\";\n      if (fileValid) {\n        setMember({ ...member, imageMember: e.target.value });\n      } else {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: \"Please select a valid image\",\n        });\n      }\n    }\n    if (e.target.name === \"social_media\") {\n      setMember({ ...member, social_media: e.target.value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (member.description === \"\") {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Please fill in the description\",\n      });\n    } else {\n      console.log(member);\n    }\n  };\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"name\"\n        value={member.name}\n        onChange={handleChange}\n        placeholder=\"Name\"\n        minLength=\"4\"\n        required\n      ></input>\n      <label>Description</label>\n      <CKEditor\n        editor={ClassicEditor}\n        data={member.description}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          setMember({ ...member, description: data });\n        }}\n      />\n      <label>Image</label>\n      <input\n        type=\"file\"\n        onChange={handleChange}\n        name=\"image\"\n        value={member.imageMember}\n        id=\"file-id\"\n        accept=\"image/png, image/jpeg\"\n        required\n      />\n\n      <label>Social media</label>\n      <input\n        className=\"input-field\"\n        type=\"url\"\n        name=\"social_media\"\n        value={member.social_media}\n        onChange={handleChange}\n        placeholder=\"url\"\n        required\n      ></input>\n\n      <button className=\"submit-btn\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nexport default EditCreateMember;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Members/MembersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst MembersForm = () => {\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    description: ''\n  })\n\n  const handleChange = (e) => {\n    if(e.target.name === 'name'){\n      setInitialValues({...initialValues, name: e.target.value})\n    } if(e.target.name === 'description'){\n      setInitialValues({...initialValues, description: e.target.value})\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(initialValues);\n  }\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Name\"></input>\n      <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\n      <button className=\"submit-btn\" type=\"submit\">Send</button>\n    </form>\n  );\n}\n\nexport default MembersForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/News/NewsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'InputImg' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'InputEditor' is defined but never used.","line":6,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":19}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport \"../../Components/FormStyles.css\";\nimport { createOrUpdateNews } from \"../../Services/newsServices\";\nimport { getCategory } from \"../../Services/categoriesServices\";\nimport InputImg from \"../Inputs/InputImg\";\nimport InputEditor from \"../Inputs/InputEditor\";\n\nconst NewsForm = () => {\n  const [news, setNews] = useState({\n    name: \"\",\n    content: \"\",\n    category: [],\n    categoryId: \"\",\n    image: \"\",\n  });\n  const [categories, setCategories] = useState([]);\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setNews({ ...news, name: e.target.value });\n        break;\n      case \"content\":\n        setNews({ ...news, content: e.target.value });\n        break;\n      case \"category\":\n        const newCategorySelected = categories?.find(\n          (category) => category.name === e.target.value\n        );\n        setNews({\n          ...news,\n          category: e.target.value,\n          categoryId: newCategorySelected?.id,\n        });\n        break;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendNews();\n  };\n\n  const sendNews = async () => {\n    createOrUpdateNews(news);\n    setNews({\n      name: \"\",\n      content: \"\",\n      category: [],\n      categoryId: \"\",\n      image: \"\",\n    });\n  };\n\n  useEffect(async () => {\n    const data = await getCategory();\n    setCategories(data);\n  }, []);\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Title</label>\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"name\"\n        value={news.name || \"\"}\n        onChange={handleChange}\n        minLength=\"5\"\n        required\n      ></input>\n      <InputEditor news={news} setNews={setNews} />\n      <label htmlFor=\"category\">Category</label>\n      <select\n        className=\"select-field\"\n        name=\"category\"\n        value={news.category || \"\"}\n        onChange={handleChange}\n        required\n      >\n        <option value=\"\" disabled>\n          Select Category\n        </option>\n        {categories?.map((category) => {\n          return (\n            <option key={category.id} value={category.name}>\n              {category.name}\n            </option>\n          );\n        })}\n      </select>\n      <InputImg news={news} setNews={setNews} />\n      <button className=\"submit-btn\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\n\nexport default NewsForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/News/NewsList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport '../CardListStyles.css';\n\nconst NewsList = () => {\n    const newsMock = [\n        {id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba'},\n        {id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba'}\n    ];\n\n    return (\n        <div>\n            <h1>Listado de Novedades</h1>\n            <ul className=\"list-container\">\n                {newsMock.length > 0 ?\n                    newsMock.map((element) => {\n                        return(\n                            <li className=\"card-info\" key={element.id}>\n                                <h3>{element.name}</h3>\n                                <p>{element.description}</p>\n                            </li>\n                        )\n                    })\n                :\n                    <p>No hay novedades</p>\n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default NewsList;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Newsletter/NewsletterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\nimport '../../Styles/NewsletterForm.css'\n\nconst SetTokenNewsLetter = () =>{\n    localStorage.setItem(\"tokenNL\",\"settokenNL\")\n}\n    function NewsletterForm() {\n    return (\n            <form  onSubmit={SetTokenNewsLetter} className=\"GreyRoundedContainerForm\">\n                <h4>Subscribite a nuestras actualizaciones!</h4>\n                <input\n                type=\"email\"\n                required\n                className=\"InputEmailNL\"\n                placeholder=\"Email\"\n                ></input>\n                <button className=\"StandardButton\">Enviar</button>\n                <p>No te preocupes, no te enviaremos spam</p>\n            </form>\n    )\n}\nexport default NewsletterForm\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Organization/OrganizationData.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Box' is defined but never used.","line":3,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":3,"column":16,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":25},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":3,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":33}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, {useEffect, useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport  { Box, Container, Button} from '@material-ui/core';\nimport { getOrganizationInformation } from '../../Services/OrganizationInformation';\n\nconst OrganizationData = () => {\n\n    const { push } = useHistory()\n    const [orgData,setOrgData]= useState({})\n\n    const loadData = async () => {\n        const {data} = await getOrganizationInformation()\n        setOrgData(data)\n    }\n    useEffect(()=>{\n        loadData()\n    },[])\n\n    const redirectToEditionForm = () => push(\"/backoffice/organization/edit\")\n\n    return (\n        <Container >\n            <img alt=\"organizationPhoto\" src={orgData.logo} />\n            <h3>{orgData.name}</h3>\n            <Box sx={{display: 'flex'}}>\n                {orgData.short_description}\n            </Box>\n            <Button variant=\"contained\" onClick={redirectToEditionForm}>Editar</Button>\n        </Container>\n    );\n}\n\nexport default OrganizationData;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Organization/OrganizationEditionForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'TextInput' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'FileInput' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'TextEditor' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":20},{"ruleId":"no-unused-vars","severity":1,"message":"'values' is defined but never used.","line":38,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":38,"endColumn":25}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { TextInput } from '../Inputs/TextInput';\nimport { FileInput } from '../Inputs/FileInput';\nimport { TextEditor } from '../Inputs/TextEditor';\nimport { validateRequiredValues, regExp, validValue, isValidFile} from '../../Utils/validation';\nimport { showError, handleCKEditorChange, changeTouchedState, handleFileChange } from '../../Utils/handlers';\nimport { useFormik } from 'formik';\nimport '../FormStyles.css';\n\nconst validateOrganizationForm = values => {\n    const errors = {};\n    const {facebook, instagram, ...requiredValues} = values;\n    const acceptTypes = ['image/png', 'image/jpg'];\n    const notValidUrlFacebook = facebook.length > 0 && !validValue(regExp.url, facebook);\n    const notValidUrlInstagram = instagram.length > 0 && !validValue(regExp.url, instagram);\n    const notValidImage = !isValidFile(acceptTypes, values.logo);\n\n    validateRequiredValues(values, errors, requiredValues);\n    if(notValidImage) errors.logo = 'Solo se aceptan formatos .png y .jpg'\n    if(notValidUrlFacebook) errors.facebook = 'Debe ser una url válida';\n    if(notValidUrlInstagram) errors.instagram = 'Debe ser una url válida';\n\n    return errors;\n}\n\nconst OrganizationEditionForm = () => {\n    const organization = {\n        organizationName: '',\n        shortDescription: '',\n        logo: '',\n        longDescription: '',\n        facebook: '',\n        instagram: ''\n    };\n\n    const formik = useFormik({\n        initialValues: organization,\n        validate: validateOrganizationForm,\n        onSubmit: values => {}\n    });\n\n    return (\n        <form className=\"form-container\" onSubmit={formik.handleSubmit}>\n            <TextInput name=\"organizationName\" label=\"Nombre\" type=\"text\" placeholder=\"Ingrese el nombre de la organización\"\n                value={formik.values.organizationName}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                errorMessage={showError(formik, 'organizationName')}/>\n            <TextEditor\n                name=\"shortDescription\" label=\"Descripción corta\"\n                value={formik.values.shortDescription}\n                onChange={(e, editor) => handleCKEditorChange(formik, editor, 'shortDescription')}\n                onBlur={() => changeTouchedState(formik, 'shortDescription')}\n                errorMessage={showError(formik, 'shortDescription')}/>\n            <FileInput btnText=\"Subir logo\" name=\"logo\" color=\"primary\" accept=\"image/png, image/jpg\"\n                value={formik.values.logo}\n                onChange={(e) => handleFileChange(formik, e.target.files, 'logo')}\n                errorMessage={showError(formik, 'logo')}/>\n            <TextInput name=\"longDescription\" label=\"Descripcion larga\" type=\"text\"\n                value={formik.values.longDescription}\n                onChange={formik.handleChange} placeholder=\"Escriba la descripción larga\"\n                onBlur={formik.handleBlur}\n                errorMessage={showError(formik, 'longDescription')}/>\n            <TextInput name=\"facebook\" label=\"Facebook\" type=\"text\"\n                value={formik.values.facebook}\n                onChange={formik.handleChange} placeholder=\"Ingrese la url\"\n                onBlur={formik.handleBlur}\n                errorMessage={showError(formik, 'facebook')}/>\n            <TextInput name=\"instagram\" label=\"Instagram\" type=\"text\"\n                value={formik.values.instagram}\n                onChange={formik.handleChange} placeholder=\"Ingrese la url\"\n                onBlur={formik.handleBlur}\n                errorMessage={showError(formik, 'instagram')}/>\n            <button className=\"submit-btn\" type=\"submit\">Guardar cambios</button>\n        </form>\n    )\n}\n\nexport default OrganizationEditionForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/OrganizationData/OrganizationDataLayout/styled.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Projects/ProjectsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst ProjectsForm = () => {\n  const [initialValues, setInitialValues] = useState({\n    title: '',\n    description: ''\n  })\n\n  const handleChange = (e) => {\n    if(e.target.name === 'title'){\n      setInitialValues({...initialValues, title: e.target.value})\n    } if(e.target.name === 'description'){\n      setInitialValues({...initialValues, description: e.target.value})\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(initialValues);\n  }\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <input className=\"input-field\" type=\"text\" name=\"title\" value={initialValues.title} onChange={handleChange} placeholder=\"Title\"></input>\n      <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Write some description\"></input>\n      <button className=\"submit-btn\" type=\"submit\">Send</button>\n    </form>\n  );\n}\n\nexport default ProjectsForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Slides/SlidesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'axios' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'ShowSucessAlert' is assigned a value but never used.","line":20,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":20,"endColumn":24}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport \"../FormStyles.css\";\nimport Swal from 'sweetalert2'\nimport {CreateSlide, EditSlide} from '../../Services/CreateOrEditSlideService'\n\nconst SlidesForm = ({slide}) => {\n  const [initialSlides, setInitialSlides] = useState({\n    name: slide?.name ?? '',\n    description:slide?.description ?? '',\n    image:slide?.image ?? '',\n    order:slide?.order ?? '',\n  });\n  const hasSlide = !!slide\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n  const ShowSucessAlert = () => {\n    Swal.fire(\n      'Slide Creado!'\n    )\n  }\n  const ShowLenghtError = () => {\n    Swal.fire({\n      title: 'Error!',\n      text: 'No se puede tener menos de 4 caracteristicas',\n      icon: 'error',\n      confirmButtonText: 'Ok, voy a editarlo!'\n    })\n  }\n  const CreateOrEditSlide = () =>{\n    if(!hasSlide)\n    (initialSlides.name.length>4)?\n      CreateSlide(initialSlides)\n    : ShowLenghtError()\n    else {\n      EditSlide(initialSlides)\n    }\n  }\n  const SetImageShorterUrl = (e) => {\n          const imageFile = e.target.files[0]\n          const imageUrl = new FileReader()\n          imageUrl.readAsDataURL(imageFile)\n          imageUrl.onload = (e) => {\n            setInitialSlides({...initialSlides, image:e.target.result})\n          }\n}\n\n  return (\n    <form className=\"form-container\" onSubmit={handleSubmit}>\n      <input\n        className='input-field'\n        type='text'\n        name='name'\n        required\n        value={initialSlides.name}\n        onChange={(e) => {\n          setInitialSlides({\n            ...initialSlides,\n            name: e.target.value,\n          })\n        }}\n        placeholder='Title (min 4 caracters)'\n      ></input>\n      <CKEditor\n        editor={ClassicEditor}\n        className='input-field'\n        type='text'\n        name='description'\n        value={initialSlides.description}\n        placeholder='Write some description'\n        required\n        onChange={(e, editor) => {\n          const data = editor.getData()\n          setInitialSlides({ ...initialSlides, description: data})\n        }}\n      />\n      <input\n        className='input-image'\n        type='file'\n        accept='image/png, image/jpg'\n        id='image'\n        name='image'\n        required\n        onChange={SetImageShorterUrl}\n      />\n      <button onClick={CreateOrEditSlide} className=\"submit-btn\" type=\"submit\">\n        {hasSlide ? \"Editar\" : \"Enviar\"}\n      </button>\n    </form>\n  );\n};\n\n\nexport default SlidesForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Testimonials/TestimonialsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":20,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":20,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst TestimonialForm = () => {\n    const [initialValues, setInitialValues] = useState({\n       name: '',\n       description: ''\n    });\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'description'){\n            setInitialValues({...initialValues, description: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name} onChange={handleChange} placeholder=\"Testimonial Title\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"description\" value={initialValues.description} onChange={handleChange} placeholder=\"Testimonial description\"></input>\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default TestimonialForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Title/Title.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Box' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nimport DefaultImage from \"../../Assets/Title/default.jpg\";\n\nimport \"../../Styles/BoxStyle.css\";\n\nconst Title = (props) => {\n  const { title, image, id } = props;\n\n  const [titleImage, setTitleImage] = useState(\"\");\n\n  useEffect(() => {\n    const finalImage = image ? image : DefaultImage;\n    setTitleImage(finalImage);\n  }, [image]);\n\n  return (\n    <div>\n      <Box\n        className=\"boxStyle\"\n        key={id}\n        sx={{\n          backgroundImage: `url(${titleImage})`,\n        }}\n      >\n        {title}\n      </Box>\n    </div>\n  );\n}\n\nexport default Title;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Users/UserModifierForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":14,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":14,"endColumn":40},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":17,"column":29,"nodeType":"MemberExpression","messageId":"unexpected","endLine":17,"endColumn":40}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport '../FormStyles.css';\nimport { useFormik } from 'formik';\nimport { createUser, updateUser } from '../../Services/userServices';\nimport { rolesList } from '../utilsData/roleList';\n\nconst UserModifierForm = ({user}) => {\n\n    const hasUser = () => user ? true : false;\n\n    const handleOnSubmit =  async (values) => {\n        if(hasUser){\n            updateUser(user.id,values).then(result => result)\n            .catch(error => console.log(error))\n        }else {\n            createUser(values).then(response => response)\n            .catch(error => console.log(error))\n        }\n    };\n\n    const validate = (values) => {\n        const errors = {};\n\n        const dataRequired = 'Dato obligatorio';\n\n        const isNotValidField = (key) => {\n            if(values[key]) return false;\n            errors[key] = dataRequired;\n            return true;\n        };\n        const isJPEG = (imageType) => imageType === \"image/jpeg\";\n        const isPNG = (imageType) => imageType === \"image/png\";\n\n        const isValidImageType= key => {\n            const profilePhoto = values.profilePhoto[key];\n            if (values.profilePhoto[key] === null) return dataRequired;\n            return isJPEG(profilePhoto) || isPNG(profilePhoto);\n        }\n        const isEmailValid = email => !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)\n\n        if (!isNotValidField('name') && values.name.length < 4) {\n          errors.name = 'Debe tener 4 caracteres o mas';\n        };\n\n        if (!isNotValidField('email') && !isEmailValid(values.email)) {\n          errors.email = 'Dirección de email inválida';\n        };\n\n        if(!values.roleId){\n            errors.roleId = 'Elija un Rol'\n        };\n\n        if(!isNotValidField('password') && values.password.length < 8){\n            errors.password= 'La contraseña debe tener al menos 8 caracteres';\n        };\n        if(!isNotValidField('profilePhoto') && !isValidImageType('type') ){\n            errors.profilePhoto = 'Tipo de archivo no soportado, extensiones permitidas: jpg o png'\n        }\n\n        return errors;\n    };\n\n    const {values,touched,errors,handleSubmit,handleChange,handleBlur,setFieldValue} = useFormik({\n        initialValues: {\n            name: user?.name ?? '',\n            password: user?.password ?? '',\n            email: user?.email ?? '',\n            roleId:user?.roleId ?? '',\n            profilePhoto:user?.profilePhoto ?? {}\n        },\n        validate,\n        enableReinitialize:true,\n        onSubmit: values => handleOnSubmit(values)\n    });\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            {!hasUser ?<div><img alt=\"profilePhoto\" src={values.profilePhoto}></img></div>\n                :<div>\n                    <label htmlFor=\"img\">Seleccionar imagen: </label>\n                    <input\n                        type=\"file\"\n                        id=\"profilePhoto\"\n                        accept=\"image/jpeg\"\n                        onChange={e=>setFieldValue('profilePhoto',e?.target?.files ? e.target.files[0] : null)}\n                        onBlur={handleBlur}\n                    />\n                    {touched.profilePhoto && errors.profilePhoto}\n                </div>\n            }\n            <input\n                className=\"input-field\"\n                type=\"text\"\n                id=\"name\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Nombre\"\n            />\n            {touched.name && errors.name}\n            <input\n                className=\"input-field\"\n                type=\"text\"\n                id=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Email\"\n            />\n            {touched.email && errors.email}\n            <input\n                className=\"input-field\"\n                type=\"password\"\n                id=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                placeholder=\"Contraseña\"\n            />\n            {touched.password && errors.password}\n            <select\n                className=\"input-field\"\n                value={values.roleId}\n                id=\"roleId\"\n                onChange={handleChange}\n            >\n                <option value=\"\" disabled >Seleccione el rol</option>\n                {\n                    rolesList.map(role =>\n                        <option key={role.roleId} value={role.roleId}>{role.roleId}</option>\n                    )\n                }\n            </select>\n            <button className=\"submit-btn\" type=\"submit\">{!hasUser ? 'Modificar' : 'Crear'}</button>\n        </form>\n    );\n}\n\nexport default UserModifierForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/Users/UsersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":20}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport '../FormStyles.css';\n\nconst UserForm = () => {\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        email: '',\n        roleId: ''\n    })\n\n    const handleChange = (e) => {\n        if(e.target.name === 'name'){\n            setInitialValues({...initialValues, name: e.target.value})\n        } if(e.target.name === 'email'){\n            setInitialValues({...initialValues, email: e.target.value})\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(initialValues);\n    }\n\n    return (\n        <form className=\"form-container\" onSubmit={handleSubmit}>\n            <input className=\"input-field\" type=\"text\" name=\"name\" value={initialValues.name || ''} onChange={handleChange} placeholder=\"Name\"></input>\n            <input className=\"input-field\" type=\"text\" name=\"email\" value={initialValues.description || ''} onChange={handleChange} placeholder=\"Email\"></input>\n            <select className=\"input-field\" value={initialValues.roleId || ''} onChange={e => setInitialValues({...initialValues, roleId: e.target.value})}>\n                <option value=\"\" disabled >Select the role</option>\n                <option value=\"1\">Admin</option>\n                <option value=\"2\">User</option>\n            </select>\n            <button className=\"submit-btn\" type=\"submit\">Send</button>\n        </form>\n    );\n}\n\nexport default UserForm;\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Components/utilsData/roleList.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/CreateOrEditSlideService.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'res' is defined but never used.","line":13,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":15}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\nimport Swal from 'sweetalert2'\nconst CreateSlide = (initialSlides) => {\n    axios({\n      method: \"POST\",\n      url: \"http://ongapi.alkemy.org/api/slides\",\n      data: {\n        name: initialSlides.name,\n        description: initialSlides.description,\n        image: initialSlides.image,\n      },\n    })\n    .then((res) => {\n          Swal.fire(\n            'Slide Creado!'\n          )\n      })\n      .catch((err) => (err));\n   }\n   const EditSlide = () => {\n       axios({\n        method: \"PUT\",\n        url: `http://ongapi.alkemy.org/api/slides/${slides.id}`,\n        data: {\n          name: initialSlides.name,\n          description: initialSlides.description,\n          image: initialSlides.image,\n        },\n       })\n   }\nexport {CreateSlide, EditSlide}\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/OrganizationInformation.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/activityService.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/categoriesServices.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":10,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":10,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\n\nconst getCategory = async () => {\n  try {\n    const response = await axios.get(\n      \"http://ongapi.alkemy.org/public/api/categories\"\n    );\n    return response.data.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { getCategory };\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/newsServices.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":22,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":22,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\n\nconst getNews = async () => {\n  const response = await axios.get(\"http://ongapi.alkemy.org/public/api/news\");\n  const data = response.data.data;\n  return data;\n};\n\nconst createOrUpdateNews = async (news) => {\n  const data = await getNews();\n  const sameData = data.find((news) => news.id === news.categoryId);\n  try {\n    if (sameData) {\n      await axios.patch(\n        `http://ongapi.alkemy.org/public/api/news/${news.categoryId}`,\n        news\n      );\n    } else {\n      axios.post(\"http://ongapi.alkemy.org/public/api/news\", news);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport { createOrUpdateNews };\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/privateApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":18,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":29},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":19,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":30}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\n\nconst config = {\n    headers: {\n        Group: 91                //Aqui va el ID del equipo!!\n    }\n}\n\nconst Get = () => {\n    axios.get('https://jsonplaceholder.typicode.com/users', config)\n    .then(res => console.log(res))\n    .catch(err => console.log(err))\n}\n\nexport default Get\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/publicApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":18,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":29},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":19,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":30}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios';\n\nconst config = {\n    headers: {\n        Group: 91                //Aqui va el ID del equipo!!\n    }\n}\n\nconst Get = () => {\n    axios.get('https://jsonplaceholder.typicode.com/users', config)\n    .then(res => console.log(res))\n    .catch(err => console.log(err))\n}\n\nexport default Get\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/slidesService.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Services/userServices.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Utils/handlers.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/Utils/validation.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/app/store.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/features/counter/Counter.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={e => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() =>\n            dispatch(incrementByAmount(Number(incrementAmount) || 0))\n          }\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\n        >\n          Add Async\n        </button>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/features/counter/counterSlice.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":11},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/serviceWorker.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":22},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":72,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":72,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":85,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":85,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":97,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":97,"endColumn":20},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":125,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":125,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/mar/alkemy/OT91-server/src/setupTests.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]