[{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\App.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Counter' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":17},{"ruleId":"no-unused-vars","severity":1,"message":"'BrowserRouter' is defined but never used.","line":5,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":23},{"ruleId":"no-unused-vars","severity":1,"message":"'Route' is defined but never used.","line":5,"column":25,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":30},{"ruleId":"no-unused-vars","severity":1,"message":"'Switch' is defined but never used.","line":5,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":38}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport logo from './logo.svg'\r\nimport { Counter } from './features/counter/Counter'\r\nimport './App.css'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport ActivitiesForm from './Components/Activities/ActivitiesForm'\r\nimport CategoriesForm from './Components/Categories/CategoriesForm'\r\nimport NewsForm from './Components/News/NewsForm'\r\nimport SlidesForm from './Components/Slides/SlidesForm'\r\nimport TestimonialForm from './Components/Testimonials/TestimonialsForm'\r\nimport UserForm from './Components/Users/UsersForm'\r\nimport SchoolCampaign from './Campaigns/School/SchoolCampaign'\r\nimport ToysCampaign from './Campaigns/Toys/ToysCampaign'\r\nimport MembersForm from './Components/Members/MembersForm'\r\nimport ProjectsForm from './Components/Projects/ProjectsForm'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          {/* <Route path=\"/\" exact component={} />           Esta ruta debe ser para el Home */}\r\n          <Route path='/create-activity' component={ActivitiesForm} />\r\n          <Route path='/create-category' component={CategoriesForm} />\r\n          <Route path='/create-news' component={NewsForm} />\r\n          <Route path='/backoffice/create-slide' component={SlidesForm} />\r\n          <Route path='/create-testimonials' component={TestimonialForm} />\r\n          <Route path='/create-user' component={UserForm} />\r\n          <Route path='/create-member' component={MembersForm} />\r\n          <Route path='/create-project' component={ProjectsForm} />\r\n          <Route path='/school-campaign' component={SchoolCampaign} />\r\n          <Route path='/toys-campaign' component={ToysCampaign} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <div className='App'>\r\n        <header className='App-header'>\r\n          <img src={logo} className='App-logo' alt='logo' />\r\n          <Counter />\r\n          <p>\r\n            Edit <code>src/App.js</code> and save to reload.\r\n          </p>\r\n          <span>\r\n            <span>Learn </span>\r\n            <a\r\n              className='App-link'\r\n              href='https://reactjs.org/'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              React\r\n            </a>\r\n            <span>, </span>\r\n            <a\r\n              className='App-link'\r\n              href='https://redux.js.org/'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              Redux\r\n            </a>\r\n            <span>, </span>\r\n            <a\r\n              className='App-link'\r\n              href='https://redux-toolkit.js.org/'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              Redux Toolkit\r\n            </a>\r\n            ,<span> and </span>\r\n            <a\r\n              className='App-link'\r\n              href='https://react-redux.js.org/'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              React Redux\r\n            </a>\r\n          </span>\r\n        </header>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\App.test.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":11}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport { render } from '@testing-library/react'\r\nimport { Provider } from 'react-redux'\r\nimport store from './app/store'\r\nimport App from './App'\r\n\r\ntest('renders learn react link', () => {\r\n  const { getByText } = render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  )\r\n\r\n  expect(getByText(/learn/i)).toBeInTheDocument()\r\n})\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\School\\Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Content = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Content\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\School\\Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Footer\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\School\\Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Header = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Header\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\School\\SchoolCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport Header from './Header'\r\nimport Slider from './Slider'\r\nimport Content from './Content'\r\nimport Footer from './Footer'\r\n\r\nconst SchoolCampaign = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Slider />\r\n      <Content />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SchoolCampaign\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\School\\Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Slider = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Slider\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\Toys\\Content.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Content = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Content\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\Toys\\Footer.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Footer\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\Toys\\Header.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Header = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Header\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\Toys\\Slider.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\n\r\nconst Slider = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Slider\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Campaigns\\Toys\\ToysCampaign.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Header' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Slider' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"no-unused-vars","severity":1,"message":"'Content' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":15},{"ruleId":"no-unused-vars","severity":1,"message":"'Footer' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":14}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport Header from './Header'\r\nimport Slider from './Slider'\r\nimport Content from './Content'\r\nimport Footer from './Footer'\r\n\r\nconst ToysCampaign = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Slider />\r\n      <Content />\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToysCampaign\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Activities\\ActivitiesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst ActivitiesForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: '',\r\n    description: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'name') {\r\n      setInitialValues({ ...initialValues, name: e.target.value })\r\n    }\r\n    if (e.target.name === 'description') {\r\n      setInitialValues({ ...initialValues, description: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='name'\r\n        value={initialValues.name}\r\n        onChange={handleChange}\r\n        placeholder='Activity Title'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='description'\r\n        value={initialValues.description}\r\n        onChange={handleChange}\r\n        placeholder='Write some activity description'\r\n      ></input>\r\n      <button className='submit-btn' type='submit'>\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ActivitiesForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Activities\\ActivitiesList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport '../CardListStyles.css'\r\n\r\nconst ActivitiesList = () => {\r\n  const activitiesMock = [\r\n    { id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba' },\r\n    { id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba' },\r\n    { id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba' },\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <h1>Listado Actividades</h1>\r\n      <ul className='list-container'>\r\n        {activitiesMock.length > 0 ? (\r\n          activitiesMock.map((activity) => {\r\n            return (\r\n              <li className='card-info' key={activity.id}>\r\n                <h3>{activity.name}</h3>\r\n                <p>{activity.description}</p>\r\n              </li>\r\n            )\r\n          })\r\n        ) : (\r\n          <p>No hay actividades</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActivitiesList\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Auth\\LoginForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst LoginForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'email') {\r\n      setInitialValues({ ...initialValues, email: e.target.value })\r\n    }\r\n    if (e.target.name === 'password') {\r\n      setInitialValues({ ...initialValues, password: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n    localStorage.setItem('token', 'tokenValueExample')\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='email'\r\n        value={initialValues.name}\r\n        onChange={handleChange}\r\n        placeholder='Enter email'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='password'\r\n        value={initialValues.password}\r\n        onChange={handleChange}\r\n        placeholder='Enter password'\r\n      ></input>\r\n      <button className='submit-btn' type='submit'>\r\n        Log In\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Auth\\RegisterForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst RegisterForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: '',\r\n    lastName: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'name') {\r\n      setInitialValues({ ...initialValues, name: e.target.value })\r\n    }\r\n    if (e.target.name === 'lastName') {\r\n      setInitialValues({ ...initialValues, lastName: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n    localStorage.setItem('token', 'tokenValueExample')\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='name'\r\n        value={initialValues.name}\r\n        onChange={handleChange}\r\n        placeholder='Enter name'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='lastName'\r\n        value={initialValues.lastName}\r\n        onChange={handleChange}\r\n        placeholder='Enter last name'\r\n      ></input>\r\n      <button className='submit-btn' type='submit'>\r\n        Register\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Categories\\CategorieServices.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Categories\\CategoriesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'Formik' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":16},{"ruleId":"no-unused-vars","severity":1,"message":"'Form' is defined but never used.","line":2,"column":18,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":22},{"ruleId":"no-unused-vars","severity":1,"message":"'Field' is defined but never used.","line":2,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29},{"ruleId":"no-unused-vars","severity":1,"message":"'ErrorMessage' is defined but never used.","line":2,"column":31,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":43},{"ruleId":"no-unused-vars","severity":1,"message":"'Container' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"no-unused-vars","severity":1,"message":"'TextField' is defined but never used.","line":3,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":30},{"ruleId":"no-unused-vars","severity":1,"message":"'Typography' is defined but never used.","line":3,"column":32,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":42},{"ruleId":"no-unused-vars","severity":1,"message":"'Button' is defined but never used.","line":3,"column":44,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":50},{"ruleId":"no-unused-vars","severity":1,"message":"'CKEditor' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { Container, TextField, Typography, Button } from '@material-ui/core'\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react'\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\r\nimport * as functions from './CategoriesFunctions'\r\nimport '../FormStyles.css'\r\n\r\nconst CategoriesForm = ({ editCategorie, id }) => {\r\n  const [values, setValues] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (editCategorie) {\r\n      const categorieData = functions.getCategorie(id)\r\n      setValues(categorieData)\r\n    }\r\n  }, [editCategorie])\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        fontFamily: 'arial',\r\n      }}\r\n      className='form-container'\r\n    >\r\n      <Formik\r\n        initialValues={{\r\n          name: values.name ? values.name : '',\r\n          description: values.description ? values.description : '',\r\n          image: values.image ? values.image : '',\r\n        }}\r\n        validate={(values) => {\r\n          let errors = {}\r\n          if (!values.name) {\r\n            errors.name = 'Debes ponerle un Nombre a la Categoria'\r\n          }\r\n          if (values.name.length < 4) {\r\n            errors.name =\r\n              'El nombre de la Categoria debe tener mas de 4 caracteres'\r\n          }\r\n          if (!values.description) {\r\n            errors.description = 'Debes poner una descripción de la Categoria'\r\n          }\r\n          if (!values.image) {\r\n            errors.image = 'Debes poner una imagen para tu Categoria'\r\n          }\r\n          return errors\r\n        }}\r\n        onSubmit={(values, { resetForm }) => {\r\n          editCategorie\r\n            ? functions.editCategorie(values)\r\n            : functions.createCategorie(values)\r\n\r\n          resetForm()\r\n        }}\r\n      >\r\n        {({ errors, setFieldValue }) => (\r\n          <Form className='form'>\r\n            <div>\r\n              <Typography\r\n                variant='h6'\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  margin: '1rem auto',\r\n                }}\r\n              >\r\n                Nombre de la Categoria\r\n              </Typography>\r\n              <TextField\r\n                fullWidth\r\n                id='fullWidth'\r\n                variant='outlined'\r\n                type='text'\r\n                name='name'\r\n                placeholder='Escribe el nombre'\r\n              />\r\n\r\n              <ErrorMessage\r\n                name='name'\r\n                component={() => (\r\n                  <Typography\r\n                    variant='subtitle2'\r\n                    color='error'\r\n                    style={{\r\n                      fontStyle: 'italic',\r\n                      fontWeight: 'bold',\r\n                      marginTop: '0.3rem',\r\n                      marginLeft: '0.2rem',\r\n                    }}\r\n                  >\r\n                    {errors.name}\r\n                  </Typography>\r\n                )}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                variant='h6'\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  margin: '1rem auto',\r\n                }}\r\n              >\r\n                Descripcion\r\n              </Typography>\r\n              <CKEditor\r\n                className='input-field'\r\n                config={{\r\n                  placeholder: 'Escribe una descripción',\r\n                }}\r\n                editor={ClassicEditor}\r\n                data=''\r\n                onChange={(e, editor) => {\r\n                  const data = editor.getData()\r\n                  setFieldValue('description', data)\r\n                }}\r\n              />\r\n              <ErrorMessage\r\n                name='description'\r\n                component={() => (\r\n                  <Typography\r\n                    variant='subtitle2'\r\n                    color='error'\r\n                    style={{\r\n                      fontStyle: 'italic',\r\n                      fontWeight: 'bold',\r\n                      marginTop: '0.3rem',\r\n                      marginLeft: '0.2rem',\r\n                    }}\r\n                  >\r\n                    {errors.description}\r\n                  </Typography>\r\n                )}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                variant='h6'\r\n                style={{\r\n                  fontWeight: 'bold',\r\n                  margin: '1rem auto',\r\n                }}\r\n              >\r\n                Image\r\n              </Typography>\r\n              <div>\r\n                {values.image > 0 && (\r\n                  <img\r\n                    src={values.image}\r\n                    alt='imagen vista previa'\r\n                    width='180'\r\n                    height='180'\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  className='input-image'\r\n                  type='file'\r\n                  accept='image/png, image/jpg'\r\n                  id='image'\r\n                  name='image'\r\n                  value={undefined}\r\n                  onChange={(e) => {\r\n                    setFieldValue('image', e)\r\n                    const imageFile = e.target.files[0]\r\n                    const imageUrl = new FileReader()\r\n                    imageUrl.readAsDataURL(imageFile)\r\n                    imageUrl.onload = (e) => {\r\n                      setValues(...values, { image: e.target?.result })\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <ErrorMessage\r\n                name='image'\r\n                component={() => (\r\n                  <Typography\r\n                    variant='subtitle2'\r\n                    color='error'\r\n                    style={{\r\n                      fontStyle: 'italic',\r\n                      fontWeight: 'bold',\r\n                      marginTop: '0.3rem',\r\n                      marginLeft: '0.2rem',\r\n                    }}\r\n                  >\r\n                    {errors.image}\r\n                  </Typography>\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <Button\r\n              variant='contained'\r\n              size='medium'\r\n              type='submit'\r\n              color='primary'\r\n            >\r\n              Send\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  )\r\n}\r\nexport default CategoriesForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Categories\\CategoriesFunctions.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Members\\MembersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst MembersForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: '',\r\n    description: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'name') {\r\n      setInitialValues({ ...initialValues, name: e.target.value })\r\n    }\r\n    if (e.target.name === 'description') {\r\n      setInitialValues({ ...initialValues, description: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='name'\r\n        value={initialValues.name}\r\n        onChange={handleChange}\r\n        placeholder='Name'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='description'\r\n        value={initialValues.description}\r\n        onChange={handleChange}\r\n        placeholder='Write some description'\r\n      ></input>\r\n      <button className='submit-btn' type='submit'>\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MembersForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\News\\NewsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":25,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":25,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../../Components/FormStyles.css'\r\n\r\nconst NewsForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    title: '',\r\n    content: '',\r\n    category: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'title') {\r\n      setInitialValues({ ...initialValues, title: e.target.value })\r\n    }\r\n    if (e.target.name === 'content') {\r\n      setInitialValues({ ...initialValues, content: e.target.value })\r\n    }\r\n    if (e.target.name === 'category') {\r\n      setInitialValues({ ...initialValues, category: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='title'\r\n        value={initialValues.title || ''}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='content'\r\n        value={initialValues.content || ''}\r\n        onChange={handleChange}\r\n      ></input>\r\n      <select\r\n        className='select-field'\r\n        name='category'\r\n        value={initialValues.category || ''}\r\n        onChange={handleChange}\r\n      >\r\n        <option value='' disabled>\r\n          Select category\r\n        </option>\r\n        <option value='1'>Demo option 1</option>\r\n        <option value='2'>Demo option 2</option>\r\n        <option value='3'>Demo option 3</option>\r\n      </select>\r\n      <button className='submit-btn' type='submit'>\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NewsForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\News\\NewsList.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport '../CardListStyles.css'\r\n\r\nconst NewsList = () => {\r\n  const newsMock = [\r\n    { id: 2, name: 'Titulo de prueba', description: 'Descripcion de prueba' },\r\n    { id: 1, name: 'Titulo de prueba', description: 'Descripcion de prueba' },\r\n    { id: 3, name: 'Titulo de prueba', description: 'Descripcion de prueba' },\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <h1>Listado de Novedades</h1>\r\n      <ul className='list-container'>\r\n        {newsMock.length > 0 ? (\r\n          newsMock.map((element) => {\r\n            return (\r\n              <li className='card-info' key={element.id}>\r\n                <h3>{element.name}</h3>\r\n                <p>{element.description}</p>\r\n              </li>\r\n            )\r\n          })\r\n        ) : (\r\n          <p>No hay novedades</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewsList\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Projects\\ProjectsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst ProjectsForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    title: '',\r\n    description: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'title') {\r\n      setInitialValues({ ...initialValues, title: e.target.value })\r\n    }\r\n    if (e.target.name === 'description') {\r\n      setInitialValues({ ...initialValues, description: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='title'\r\n        value={initialValues.title}\r\n        onChange={handleChange}\r\n        placeholder='Title'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='description'\r\n        value={initialValues.description}\r\n        onChange={handleChange}\r\n        placeholder='Write some description'\r\n      ></input>\r\n      <button className='submit-btn' type='submit'>\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProjectsForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Slides\\SlidesForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst SlidesForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: '',\r\n    description: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'name') {\r\n      setInitialValues({ ...initialValues, name: e.target.value })\r\n    }\r\n    if (e.target.name === 'description') {\r\n      setInitialValues({ ...initialValues, description: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='name'\r\n        value={initialValues.name}\r\n        onChange={handleChange}\r\n        placeholder='Slide Title'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='description'\r\n        value={initialValues.description}\r\n        onChange={handleChange}\r\n        placeholder='Write the description'\r\n      ></input>\r\n      <button className='submit-btn' type='submit'>\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SlidesForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Testimonials\\TestimonialsForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst TestimonialForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: '',\r\n    description: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'name') {\r\n      setInitialValues({ ...initialValues, name: e.target.value })\r\n    }\r\n    if (e.target.name === 'description') {\r\n      setInitialValues({ ...initialValues, description: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='name'\r\n        value={initialValues.name}\r\n        onChange={handleChange}\r\n        placeholder='Testimonial Title'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='description'\r\n        value={initialValues.description}\r\n        onChange={handleChange}\r\n        placeholder='Testimonial description'\r\n      ></input>\r\n      <button className='submit-btn' type='submit'>\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TestimonialForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Components\\Users\\UsersForm.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":22,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":22,"endColumn":16}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport '../FormStyles.css'\r\n\r\nconst UserForm = () => {\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: '',\r\n    email: '',\r\n    roleId: '',\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'name') {\r\n      setInitialValues({ ...initialValues, name: e.target.value })\r\n    }\r\n    if (e.target.name === 'email') {\r\n      setInitialValues({ ...initialValues, email: e.target.value })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(initialValues)\r\n  }\r\n\r\n  return (\r\n    <form className='form-container' onSubmit={handleSubmit}>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='name'\r\n        value={initialValues.name || ''}\r\n        onChange={handleChange}\r\n        placeholder='Name'\r\n      ></input>\r\n      <input\r\n        className='input-field'\r\n        type='text'\r\n        name='email'\r\n        value={initialValues.description || ''}\r\n        onChange={handleChange}\r\n        placeholder='Email'\r\n      ></input>\r\n      <select\r\n        className='input-field'\r\n        value={initialValues.roleId || ''}\r\n        onChange={(e) =>\r\n          setInitialValues({ ...initialValues, roleId: e.target.value })\r\n        }\r\n      >\r\n        <option value='' disabled>\r\n          Select the role\r\n        </option>\r\n        <option value='1'>Admin</option>\r\n        <option value='2'>User</option>\r\n      </select>\r\n      <button className='submit-btn' type='submit'>\r\n        Send\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UserForm\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Services\\privateApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":20,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":31},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":13,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":13,"endColumn":32}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios'\r\n\r\nconst config = {\r\n  headers: {\r\n    Group: 1, //Aqui va el ID del equipo!!\r\n  },\r\n}\r\n\r\nconst Get = () => {\r\n  axios\r\n    .get('https://jsonplaceholder.typicode.com/users', config)\r\n    .then((res) => console.log(res))\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport default Get\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\Services\\publicApiService.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":20,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":31},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":13,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":13,"endColumn":32}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from 'axios'\r\n\r\nconst config = {\r\n  headers: {\r\n    Group: 1, //Aqui va el ID del equipo!!\r\n  },\r\n}\r\n\r\nconst Get = () => {\r\n  axios\r\n    .get('https://jsonplaceholder.typicode.com/users', config)\r\n    .then((res) => console.log(res))\r\n    .catch((err) => console.log(err))\r\n}\r\n\r\nexport default Get\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\app\\store.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\features\\counter\\Counter.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  decrement,\r\n  increment,\r\n  incrementByAmount,\r\n  incrementAsync,\r\n  selectCount,\r\n} from './counterSlice'\r\nimport styles from './Counter.module.css'\r\n\r\nexport function Counter() {\r\n  const count = useSelector(selectCount)\r\n  const dispatch = useDispatch()\r\n  const [incrementAmount, setIncrementAmount] = useState('2')\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row}>\r\n        <button\r\n          className={styles.button}\r\n          aria-label='Increment value'\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          +\r\n        </button>\r\n        <span className={styles.value}>{count}</span>\r\n        <button\r\n          className={styles.button}\r\n          aria-label='Decrement value'\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <input\r\n          className={styles.textbox}\r\n          aria-label='Set increment amount'\r\n          value={incrementAmount}\r\n          onChange={(e) => setIncrementAmount(e.target.value)}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          onClick={() =>\r\n            dispatch(incrementByAmount(Number(incrementAmount) || 0))\r\n          }\r\n        >\r\n          Add Amount\r\n        </button>\r\n        <button\r\n          className={styles.asyncButton}\r\n          onClick={() => dispatch(incrementAsync(Number(incrementAmount) || 0))}\r\n        >\r\n          Add Async\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\features\\counter\\counterSlice.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\index.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'React' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":13},{"ruleId":"no-unused-vars","severity":1,"message":"'App' is defined but never used.","line":4,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":11},{"ruleId":"no-unused-vars","severity":1,"message":"'Provider' is defined but never used.","line":6,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\serviceWorker.js","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":22},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":72,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":72,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":85,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":85,"endColumn":26},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":97,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":97,"endColumn":20},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":125,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":125,"endColumn":18}],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Users\\Telma Kneeteman\\Desktop\\DEV\\Tel\\alkemy\\ONG\\OT91-server\\src\\setupTests.js","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]